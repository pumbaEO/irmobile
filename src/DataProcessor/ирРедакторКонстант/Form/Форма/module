//Запомним ограничение типа
Перем мОграничениеТипа;

Процедура КнопкаВыполнитьНажатие(Кнопка)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура КоманднаяПанель1ЗаписатьКонстанты(Кнопка)
	
	Для каждого Стр Из ТаблицаКонстант Цикл
		
		Если НЕ Стр.ПризнакМодификации Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		Если ПравоДоступа("Изменение", Метаданные.Константы[Стр.ИдентификаторКонстанты], ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
		
			Константы[Стр.ИдентификаторКонстанты].Установить(Стр.ЗначениеКонстанты);
			Стр.ПризнакМодификации = Ложь;
			ЗаписьЖурналаРегистрации("Редактирование констант", УровеньЖурналаРегистрации.Информация, Метаданные.Константы[Стр.ИдентификаторКонстанты], Стр.ЗначениеКонстанты);
		
		КонецЕсли; 
		
	КонецЦикла;
	Модифицированность = Ложь;
	
КонецПроцедуры

Процедура ПрочитатьКонстантыИзБазы()

	ТаблицаКонстант.Очистить();
	
	Для каждого Конст Из Метаданные.Константы Цикл
		
		Если НЕ ПравоДоступа("Чтение", Конст, ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Конст.тип.Типы()[0] = Тип("ХранилищеЗначения") Тогда
		
			Продолжить;
		
		КонецЕсли; 
		
		НовСтр = ТаблицаКонстант.Добавить();
		НовСтр.ИдентификаторКонстанты = Конст.Имя;
		НовСтр.СинонимКонстанты = Конст.Синоним;
		НовСтр.ЗначениеКонстанты = Константы[Конст.имя].Получить();
		НовСтр.ТипЗначения = ТипЗнч(НовСтр.ЗначениеКонстанты);
		НовСтр.РазрешеноИзменение = ПравоДоступа("Изменение", Конст, ПользователиИнформационнойБазы.ТекущийПользователь())
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	ПрочитатьКонстантыИзБазы();
КонецПроцедуры

Процедура ТаблицаКонстантПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = ИСТИНА;
КонецПроцедуры

Процедура ТаблицаКонстантПередУдалением(Элемент, Отказ)
	Отказ = ИСТИНА;
КонецПроцедуры

Процедура ТаблицаКонстантПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если ОтменаРедактирования Тогда
	
		Возврат;
	
	КонецЕсли;
	Элемент.ТекущаяКолонка.ЭлементУправления.ОграничениеТипа = метаданные.Константы[ЭлементыФормы.ТаблицаКонстант.ТекущиеДанные.ИдентификаторКонстанты].Тип;
	ЭлементыФормы.ТаблицаКонстант.ТекущиеДанные.ПризнакМодификации = ИСТИНА;
	ЭтаФорма.Модифицированность = Истина;
КонецПроцедуры

Процедура ТаблицаКонстантПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	Если ДанныеСтроки.ПризнакМодификации = Истина Тогда
		ОформлениеСтроки.ЦветТекста = WebЦвета.КожаноКоричневый;
	КонецЕсли; 
	
	Если НЕ ДанныеСтроки.РазрешеноИзменение Тогда
		ОформлениеСтроки.Ячейки.ЗначениеКонстанты.ТолькоПросмотр = ИСТИНА;
	КонецЕсли;

	Если Истина
		И ДанныеСтроки.РазрешеноИзменение
		И ТипЗнч(ДанныеСтроки.ЗначениеКонстанты) = Тип("Булево") 
	Тогда
		ОформлениеСтроки.Ячейки.ЗначениеКонстанты.УстановитьФлажок(ДанныеСтроки.ЗначениеКонстанты);
	КонецЕсли; 
	ирНеглобальный.ТабличноеПоле_ОтобразитьПиктограммыТиповЛкс(ОформлениеСтроки, "ЗначениеКонстанты");
	
КонецПроцедуры

// <Описание функции>
//
// Параметры:
//  <Параметр1>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>;
//  <Параметр2>  – <Тип.Вид> – <описание параметра>
//                 <продолжение описания параметра>.
//
// Возвращаемое значение:
//               – <Тип.Вид> – <описание значения>
//                 <продолжение описания значения>;
//  <Значение2>  – <Тип.Вид> – <описание значения>
//                 <продолжение описания значения>.
//
Функция ПроверкаМодифицированностиФормы()

	Если ЭтаФорма.Модифицированность Тогда
		Ответ = Вопрос("Данные в форме были изменены. Сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Возврат Ложь;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			КоманднаяПанель1ЗаписатьКонстанты(0);
		КонецЕсли;
	КонецЕсли;
	Возврат Истина;

КонецФункции // ПроверкаМодифицированностиФормы()

Процедура КоманднаяПанель1Перечиать(Кнопка)
	
	Если Не ПроверкаМодифицированностиФормы() Тогда
		Возврат;
	КонецЕсли;
	ПрочитатьКонстантыИзБазы();
	
КонецПроцедуры

Процедура ТаблицаКонстантЗначениеКонстантыОчистка(Элемент, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = мОграничениеТипа;
	//Сообщить("--");
КонецПроцедуры

Процедура ТаблицаКонстантПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	ТекДанные = Элемент.ТекущиеДанные;
	мОграничениеТипа = Метаданные.Константы[Элемент.ТекущиеДанные.ИдентификаторКонстанты].Тип;
КонецПроцедуры

Процедура ТаблицаКонстантЗначениеКонстантыНачалоВыбора(Элемент, СтандартнаяОбработка)
	Элемент.ОграничениеТипа = мОграничениеТипа;
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если ЗначениеЗаполнено(НачальноеЗначениеВыбора) Тогда
		ТекущаяСтрока = ТаблицаКонстант.Найти(НачальноеЗначениеВыбора, "ИдентификаторКонстанты");
		Если ТекущаяСтрока <> Неопределено Тогда
			ЭтаФорма.ЭлементыФормы.ТаблицаКонстант.ТекущаяСтрока = ТекущаяСтрока;
			ЭтаФорма.ЭлементыФормы.ТаблицаКонстант.ТекущаяКолонка = ЭтаФорма.ЭлементыФормы.ТаблицаКонстант.Колонки.ЗначениеКонстанты;
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = Не ПроверкаМодифицированностиФормы();
	
КонецПроцедуры

Процедура КоманднаяПанель1ОПодсистеме(Кнопка)
	ирГлобальный.ЛксОткрытьСправкуПоПодсистеме(ЭтотОбъект);
КонецПроцедуры

Процедура ТаблицаКонстантЗначениеКонстантыПриИзменении(Элемент)
	
	ЭлементыФормы.ТаблицаКонстант.ТекущиеДанные.ТипЗначения = ТипЗнч(Элемент.Значение);
	
КонецПроцедуры

Процедура ТаблицаКонстантПриИзмененииФлажка(Элемент, Колонка)
	
	ирГлобальный.ЛксИнтерактивноЗаписатьВКолонкуТабличногоПоля(Элемент, Колонка, Не Элемент.ТекущаяСтрока[Колонка.Данные]);

КонецПроцедуры

Процедура ТаблицаКонстантЗначениеКонстантыОкончаниеВводаТекста(Элемент, Текст, Значение, СтандартнаяОбработка)
	
	ирНеглобальный.ПолеВвода_ОкончаниеВводаТекстаЛкс(Элемент, Текст, Значение, СтандартнаяОбработка);

КонецПроцедуры

Процедура КоманднаяПанель1ЖурналРегистрации(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.ТаблицаКонстант.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	// -+ АВВ [10.08.2012] Обработки.ирАнализЖурналаРегистрации.Создать().ОткрытьСПараметром("Метаданные", "Константа." + ТекущаяСтрока.ИдентификаторКонстанты);
	ирМобильные.ПодключитьВнешнююОбработку("ирАнализЖурналаРегистрации").ОткрытьСПараметром("Метаданные", "Константа." + ТекущаяСтрока.ИдентификаторКонстанты);
	
КонецПроцедуры

