
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем мСоответствияСобытий;
Перем мУровниСобытий;
Перем мГруппыСобытий;

Перем мПервоначальныеНастройки;  

Перем мМассивУровнейРегистрацийПоВажности;

Перем мМенялисьНастройкиДоступа;
Перем мМенялисьНастройкиОтказаВДоступе;

Перем мЛиВидДерево;
Перем мЛиОтображатьИмена;

Перем констКнопка_ВидДерево;
Перем констКнопка_ВидЗакладки;

Перем мКартинкиУровнейСобытий;

Перем констСобытиеДоступ_Доступ;
Перем констСобытиеДоступ_ОтказВДоступе;
Перем констСтрокаДереваДоступ_Доступ;
Перем констСтрокаДереваДоступ_ОтказВДоступе;
Перем констОбычныйШрифт;
Перем констЖирныйШрифт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура АктивизироватьСтрокуСобытия(ИмяСобытия, Метаданные = Неопределено) Экспорт
	
	Если НЕ мЛиВидДерево Тогда
		мЛиВидДерево = Истина;		
		ОформитьФормуПоВидуОтображения();
	КонецЕсли; 
	СтрокаСобытия = ДеревоСобытий.Строки.Найти(ИмяСобытия, "ИмяСобытия", Истина);
	Если СтрокаСобытия <> Неопределено Тогда
		ЭлементыФормы.ДеревоСобытий.ТекущаяСтрока = СтрокаСобытия;
		ОткрытьНастройкуДоступа(СтрокаСобытия, Метаданные);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ УПРАВЛЕНИЯ ВНЕШНИМ ВИДОМ ФОРМЫ

Процедура УстановитьОбщиеФлажки(ОбщийФлажок = Истина, ФлажокГруппы = Истина)
	
	Если ОбщийФлажок Тогда
		
		ВсеСобытия = Истина;
		
		Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
			
			Если НЕ ЭтаФорма[КлючИЗначение.Ключ] Тогда
				
				ВсеСобытия = Ложь;
				Прервать;
				
			КонецЕсли; 
			
		КонецЦикла; 
		
	КонецЕсли; 
	
	Если ФлажокГруппы Тогда
		
		ВсеСобытияТекущейГруппы = Истина;
		
		ТекущаяГруппа = ЭлементыФормы.ПанельИспользованиеСобытий.ТекущаяСтраница.Имя;
		СобытияГруппы = мГруппыСобытий[ТекущаяГруппа]; 
		
		Для Каждого ИмяСобытия Из СобытияГруппы Цикл
			
			Если НЕ ЭтаФорма[ИмяСобытия] Тогда
				
				ВсеСобытияТекущейГруппы = Ложь;
				Прервать;
				
			КонецЕсли;
			
		КонецЦикла; 
		
	КонецЕсли; 
	
КонецПроцедуры // УстановитьОбщиеФлажки()

Процедура ОформитьСобытияПоУровнюРегистрации()
	
	ЦветСерый = WebЦвета.Серый;
	ЦветЧерный = WebЦвета.Черный;
	Для Каждого КлючИЗначение Из мУровниСобытий Цикл
		
		ИмяРеквизита = КлючИЗначение.Ключ;
		УровеньСобытия = КлючИЗначение.Значение;
		Инд = мМассивУровнейРегистрацийПоВажности.Найти(УровеньСобытия);
		Если (Инд + 1) <= УровеньРегистрации Тогда
			ЭлементыФормы[ИмяРеквизита].ЦветТекста = ЦветЧерный;
			ЭлементыФормы[ИмяРеквизита + "_Картинка"].Доступность = Истина; 
		Иначе
			ЭлементыФормы[ИмяРеквизита].ЦветТекста = ЦветСерый;
			ЭлементыФормы[ИмяРеквизита + "_Картинка"].Доступность = Ложь;
		КонецЕсли;            		
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ОформитьУровниРегистрацииЖР(ПередОткрытием = Ложь)
	
	ТекущийУровень = мПервоначальныеНастройки["УровеньРегистрации"];
	ЖирныйШрифт = Новый Шрифт( , , Истина);
	ОбычныйШрифт = Новый Шрифт;
	Для А = 0 По 4 Цикл
		
		ЭлементыФормы["ПереключательУровеньРегистрации" + А].Шрифт = ?(ТекущийУровень = А, ЖирныйШрифт, ОбычныйШрифт);
		ЭлементыФормы["ПереключательУровеньРегистрации" + А].Подсказка = ?(ТекущийУровень = А, "Текущий уровень регистрации", "");
		
	КонецЦикла; 
	
	Если ПередОткрытием Тогда
		
		Макет = ПолучитьМакет("СобытияЖР");
		ТабДок_Картинки = Макет.ПолучитьОбласть("КартинкиУровней");
		
		Для А = 1 По 4 Цикл
			
			Если А = 1 Тогда
				
				УровеньСобытияТекст = "Примечание";
				
			ИначеЕсли А = 2 Тогда 
				
				УровеньСобытияТекст = "Информация";
				
			ИначеЕсли А = 3 Тогда 
				
				УровеньСобытияТекст = "Предупреждение";
				
			ИначеЕсли А = 4 Тогда 
				
				УровеньСобытияТекст = "Ошибка";
				
			КонецЕсли; 
			
			Для В = 0 По 4 Цикл
				
				ЭлементыФормы["КартинкаУровеньРегистрации" + В + А].Картинка = ТабДок_Картинки.Рисунки[УровеньСобытияТекст].Картинка; 
				ЭлементыФормы["КартинкаУровеньРегистрации" + В + А].Видимость = (А + В) >= 5; 			 
				
			КонецЦикла; 		 	
			
		КонецЦикла;  		
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОформитьСобытияНастроекДоступаИОтказаВДоступе()
	
	ЭлементыФормы.Событие_Доступ_Доступ.Заголовок = мСоответствияСобытий["Событие_Доступ_Доступ"][?(мЛиОтображатьИмена, "Имя", "Синоним")]
													+ ?(НастройкиДоступа <> Неопределено, " (регистрировать с отбором)", " (не регистрировать ничего)");  
	ЭлементыФормы.Событие_Доступ_ОтказВДоступе.Заголовок = мСоответствияСобытий["Событие_Доступ_ОтказВДоступе"][?(мЛиОтображатьИмена, "Имя", "Синоним")]
													+ ?(НастройкиОтказаВДоступе <> Неопределено, " (регистрировать с отбором)", " (регистрировать все)");  
													
	ЭлементыФормы.НадписьНастроитьДоступ.Заголовок = "настроить" + " (" + ?(НастройкиДоступа = Неопределено, "0", НастройкиДоступа.Количество()) + ")";
	ЭлементыФормы.НадписьНастроитьОтказДоступа.Заголовок = "настроить" + " (" + ?(НастройкиОтказаВДоступе = Неопределено, "0", НастройкиОтказаВДоступе.Количество()) + ")";
	
КонецПроцедуры

Процедура ОформитьФормуПоВидуОтображения(ПередОткрытием = Ложь)
	
	ЭлементыФормы.ВсеСобытияТекущейГруппы.Видимость = НЕ мЛиВидДерево;
	ЭлементыФормы.ВсеСобытия.Видимость = НЕ мЛиВидДерево;
	ЭлементыФормы.ПанельИспользованиеСобытий.Видимость = НЕ мЛиВидДерево;
	ЭлементыФормы.ПанельДерево.Видимость = мЛиВидДерево;

	ОформитьУровниРегистрацииЖР(ПередОткрытием);
	Если мЛиВидДерево Тогда
		ЗаполнитьДеревоСобытий();
		ЭлементыФормы.ДеревоСобытий.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень; 
	Иначе
		ОформитьСобытияПоУровнюРегистрации();
		ОформитьСобытияНастроекДоступаИОтказаВДоступе();
	КонецЕсли; 
	
	ОтобразитьИменаИлиСинонимыСобытий();
	УстановитьОбщиеФлажки(Истина, НЕ мЛиВидДерево);
	
КонецПроцедуры

Процедура ОтобразитьИменаИлиСинонимыСобытий()
	
	Если мЛиВидДерево Тогда
		Для Каждого СтрокаГруппа Из ДеревоСобытий.Строки[0].Строки Цикл
			Для Каждого СтрокаСобытие Из СтрокаГруппа.Строки Цикл
				СтрокаСобытие.Событие = ?(мЛиОтображатьИмена, мСоответствияСобытий[СтрокаСобытие.ИмяРеквизита].Имя,
					мСоответствияСобытий[СтрокаСобытие.ИмяРеквизита].Синоним);
			КонецЦикла; 
		КонецЦикла; 
	Иначе
		Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
			ЭлементыФормы[КлючИЗначение.Ключ].Заголовок =  ?(мЛиОтображатьИмена, КлючИЗначение.Значение.Имя, КлючИЗначение.Значение.Синоним);
		КонецЦикла;  
		ОформитьСобытияНастроекДоступаИОтказаВДоступе();
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ИнициализироватьИнформациюОСобытиях()
	
	мСоответствияСобытий = Новый Структура;
	мУровниСобытий = Новый Структура;
	мГруппыСобытий = Новый Структура;
	мКартинкиУровнейСобытий = Новый Соответствие;
	
	мСоответствияИменСинонимов = Новый ТаблицаЗначений;
	
	Макет = ПолучитьМакет("СобытияЖР");
	ТабДок_События = Макет.ПолучитьОбласть("СобытияЖР");
	ТабДок_Картинки = Макет.ПолучитьОбласть("КартинкиУровней");
	
	Для Каждого Рисунок Из ТабДок_Картинки.Рисунки Цикл
		
		мКартинкиУровнейСобытий.Вставить(УровеньЖурналаРегистрации[Рисунок.Имя], Рисунок.Картинка);
		
	КонецЦикла; 
	
	КоличествоЭлементов = ТабДок_События.ВысотаТаблицы;
	Для А = 1 По КоличествоЭлементов Цикл
		
		ИмяРеквизита = ТабДок_События.Область(А,1).Текст;
		ИмяСобытия = ТабДок_События.Область(А,2).Текст;
		СинонимСобытия = ТабДок_События.Область(А,3).Текст;
		УровеньСобытияТекст = ТабДок_События.Область(А,4).Текст;
		УровеньСобытия = УровеньЖурналаРегистрации[УровеньСобытияТекст];
		ГруппаСобытия = СтрЗаменить(ТабДок_События.Область(А,5).Текст, " ", "");
		
		Если НЕ мГруппыСобытий.Свойство(ГруппаСобытия) Тогда
			
			мГруппыСобытий.Вставить(ГруппаСобытия, Новый Массив);
			
		КонецЕсли;
		
		мГруппыСобытий[ГруппаСобытия].Добавить(ИмяРеквизита); 			
		
		мСоответствияСобытий.Вставить(ИмяРеквизита, Новый Структура("Имя, Синоним", ИмяСобытия, СинонимСобытия));
		мУровниСобытий.Вставить(ИмяРеквизита, УровеньСобытия);
		
		ЭлементыФормы[ИмяРеквизита + "_Картинка"].Картинка = мКартинкиУровнейСобытий[УровеньСобытия];  
		
		СтрокаГруппа = НайтиСоздатьГруппуВДеревеСобытий(ГруппаСобытия);
		СтрокаСобытие = СтрокаГруппа.Строки.Добавить();
		СтрокаСобытие.Событие = ?(мЛиОтображатьИмена, ИмяСобытия, СинонимСобытия);
		СтрокаСобытие.ИмяСобытия = ИмяСобытия;
		СтрокаСобытие.ИмяРеквизита = ИмяРеквизита;
		Если ИмяСобытия = констСобытиеДоступ_Доступ ИЛИ ИмяСобытия = констСобытиеДоступ_ОтказВДоступе Тогда
			Если ИмяСобытия = констСобытиеДоступ_Доступ Тогда
				констСтрокаДереваДоступ_Доступ = СтрокаСобытие;
			Иначе
				констСтрокаДереваДоступ_ОтказВДоступе = СтрокаСобытие;	
			КонецЕсли; 
			СтрокаСобытие.ДополнительнаяНастройка = "настроить";			
		КонецЕсли; 
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура ЗаполнитьПервоначальныеНастройки()
	
	мМенялисьНастройкиДоступа = Ложь;
	мМенялисьНастройкиОтказаВДоступе = Ложь;
	
	мПервоначальныеНастройки = Новый Структура;
	
	МассивРегистрация = ПолучитьИспользованиеЖурналаРегистрации();
	УровеньРегистрации = МассивРегистрация.Количество();		
	мПервоначальныеНастройки.Вставить("УровеньРегистрации", УровеньРегистрации);
	
	Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
		
		ИмяРеквизита = КлючИЗначение.Ключ;
		ИмяСобытия = КлючИЗначение.Значение.Имя;       
		//Антибаг (?) платформы 8.2.14-8.2.16 http://partners.v8.1c.ru/forum/thread.jsp?id=1080713  
		//метод ПолучитьИспользованиеЖурналаРегистрации не применим, так как Тип ИспользованиеСобытияЖурналаРегистрации не поддерживает обмен между клиентом и сервером
		ИспользованиеСобытия = ирСервер.ПолучитьИспользованиеСобытияЖурналаРегистрацииКакСтруктуру(ИмяСобытия);
		ЭтаФорма[ИмяРеквизита] = ИспользованиеСобытия.Использование;	
		мПервоначальныеНастройки.Вставить(ИмяРеквизита, ЭтаФорма[ИмяРеквизита]);
		Если ИмяСобытия = констСобытиеДоступ_Доступ Тогда
			НастройкиДоступа = ИспользованиеСобытия.ОписаниеИспользования;
		ИначеЕсли ИмяСобытия = констСобытиеДоступ_ОтказВДоступе Тогда 
			НастройкиОтказаВДоступе = ИспользованиеСобытия.ОписаниеИспользования;
		КонецЕсли; 		
		
	КонецЦикла; 
	
КонецПроцедуры

Процедура НастроитьДоступ(ЛиДоступ, Метаданные = Неопределено)
	
	ФормаНастройки = ПолучитьФорму("ФормаНастройкиДоступа", ЭтаФорма);
	ФормаНастройки.ЛиДоступ = ЛиДоступ;	
	ФормаНастройки.ПереданныеНастройки = ?(ЛиДоступ, НастройкиДоступа, НастройкиОтказаВДоступе);
		
	Если Метаданные <> Неопределено Тогда
		ФормаНастройки.ТекущийОбъектМД = Метаданные[0];
	КонецЕсли; 
	
	Результат = ФормаНастройки.ОткрытьМодально();
	Если Результат <> Неопределено Тогда
		
		Модифицированность = Истина;
		
		Если Результат.Количество() = 0 Тогда
			Результат = Неопределено;			
		КонецЕсли; 
		Если ЛиДоступ Тогда         		
			НастройкиДоступа = Результат;
			мМенялисьНастройкиДоступа = Истина;
		Иначе
			НастройкиОтказаВДоступе = Результат;
			мМенялисьНастройкиОтказаВДоступе = Истина;
		КонецЕсли;
		
		УстановитьФлажкиДляСобытийДоступа();
		ОформитьСобытияНастроекДоступаИОтказаВДоступе();
		
	КонецЕсли;  	
	
КонецПроцедуры

Функция ПрименитьИзменившиесяНастройки()
	
	БылиОшибки = Ложь;
	ОчиститьСообщения();
	
	Если УровеньРегистрации <> мПервоначальныеНастройки["УровеньРегистрации"]  Тогда
		
		Попытка
			
			Попытка
				
				УстановитьМонопольныйРежим(Истина);
				
			Исключение
				
				ВызватьИсключение;
				
			КонецПопытки;
			
			МассивУровней = Новый Массив();
			Для А = 0 По УровеньРегистрации - 1 Цикл
				
				МассивУровней.Добавить(мМассивУровнейРегистрацийПоВажности[А]); 
				
			КонецЦикла; 
			
			УстановитьИспользованиеЖурналаРегистрации(МассивУровней);
			мПервоначальныеНастройки["УровеньРегистрации"] = УровеньРегистрации;
			
		Исключение
			
			СообщитьСТекущимВременем("Не удалось установить монопольный режим для изменения уровня регистрации событий!", СтатусСообщения.Важное);
			СообщитьСТекущимВременем(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			БылиОшибки = Истина;
			
		КонецПопытки;
		
	КонецЕсли; 
	
	Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
		
		ИмяРеквизита = КлючИЗначение.Ключ;
		ИмяСобытия = КлючИЗначение.Значение.Имя;
		
		Если Ложь
			Или ЭтаФорма[ИмяРеквизита]  <>  мПервоначальныеНастройки[ИмяРеквизита]
			Или (Истина
				И ЭтаФорма[ИмяРеквизита] 
				И (Ложь
					Или (Истина
						И ИмяСобытия = констСобытиеДоступ_Доступ 
						И мМенялисьНастройкиДоступа)
					Или (Истина
						И ИмяСобытия = констСобытиеДоступ_ОтказВДоступе 
						И мМенялисьНастройкиОтказаВДоступе))) 
		Тогда
			
			ИспользованиеСобытия = Новый Структура("Использование, ОписаниеИспользования", ЭтаФорма[ИмяРеквизита], Неопределено);
			
			Если ЭтаФорма[ИмяРеквизита] И ИмяСобытия = констСобытиеДоступ_Доступ И мМенялисьНастройкиДоступа Тогда
				
				ИспользованиеСобытия.ОписаниеИспользования = НастройкиДоступа;
				
			ИначеЕсли ЭтаФорма[ИмяРеквизита] И ИмяСобытия = констСобытиеДоступ_ОтказВДоступе И мМенялисьНастройкиОтказаВДоступе Тогда
				
				ИспользованиеСобытия.ОписаниеИспользования = НастройкиОтказаВДоступе;
				
			КонецЕсли; 
			
			Попытка
				//Антибаг (?) платформы 8.2.14-8.2.16 http://partners.v8.1c.ru/forum/thread.jsp?id=1080713  
				//метод УстановитьИспользованиеСобытияЖурналаРегистрации не применим, так как Тип ИспользованиеСобытияЖурналаРегистрации не поддерживает обмен между клиентом и сервером				
				ирСервер.УстановитьИспользованиеСобытияЖурналаРегистрацииПоСтруктуре(ИмяСобытия, ИспользованиеСобытия);
				мПервоначальныеНастройки[ИмяРеквизита] = ЭтаФорма[ИмяРеквизита];
				Если ЭтаФорма[ИмяРеквизита] И ИмяСобытия = констСобытиеДоступ_Доступ И мМенялисьНастройкиДоступа Тогда
					мМенялисьНастройкиДоступа = Ложь;
				ИначеЕсли ЭтаФорма[ИмяРеквизита] И ИмяСобытия = констСобытиеДоступ_ОтказВДоступе И мМенялисьНастройкиОтказаВДоступе Тогда
					мМенялисьНастройкиОтказаВДоступе = Ложь;
				КонецЕсли; 
			Исключение
				БылиОшибки = Истина;
				СообщитьСТекущимВременем("Не удалось " + ?(ЭтаФорма[ИмяРеквизита], "установить", "сбросить") + " использование события " + ИмяСобытия, СтатусСообщения.Важное);
				СообщитьСТекущимВременем(ОписаниеОшибки());
			КонецПопытки
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Возврат НЕ БылиОшибки;
	
КонецФункции

Процедура ПроверкаДоступностиКнопкиПрименить()
	
	ЭлементыФормы.ОсновныеДействияФормы.Кнопки.ОсновныеДействияФормыПрименить.Доступность = Модифицированность;
	
КонецПроцедуры

Процедура СообщитьСТекущимВременем(Сообщение, Статус = Неопределено)
	
	Сообщить(Сообщение + " (" + Формат(ТекущаяДата(), "ДФ=HH:MM:ss") + ")", ?(Статус = Неопределено, СтатусСообщения.БезСтатуса, Статус));
	
КонецПроцедуры

Процедура ОчиститьНастройкиДоступаОтНеизвестныхМетаданных(пНастройкиДоступа)
	
	Если НЕ (ТипЗнч(пНастройкиДоступа) = Тип("Массив") И пНастройкиДоступа.Количество() > 1) Тогда
		
		пНастройкиДоступа = Неопределено;
		
	Иначе
		
		А = пНастройкиДоступа.ВГраница();
		
		Пока А > 0 Цикл
			
			Если НЕ ЕстьОбъектМетаданныхВКонфигурации(пНастройкиДоступа[А].Объект) Тогда
				
				пНастройкиДоступа.Удалить(А);
				
			КонецЕсли; 

			А = А - 1;
				
		КонецЦикла; 
		
		Если пНастройкиДоступа.Количество() = 0 Тогда
			
			пНастройкиДоступа = Неопределено;
			
		КонецЕсли; 
		
				
	КонецЕсли; 
	
КонецПроцедуры

Функция ЕстьОбъектМетаданныхВКонфигурации(ПолноеИмяОбъекта)
	
	Возврат Метаданные.НайтиПоПолномуИмени(ПолноеИмяОбъекта) <> Неопределено;
	
КонецФункции

Функция НайтиСоздатьГруппуВДеревеСобытий(ИмяГруппы)
	
	СтрокаГруппа = ДеревоСобытий.Строки[0].Строки.Найти(ИмяГруппы, "Событие");
	Если СтрокаГруппа = Неопределено Тогда		
		СтрокаГруппа = ДеревоСобытий.Строки[0].Строки.Добавить();
		СтрокаГруппа.Событие = ИмяГруппы; 		
	КонецЕсли; 
	
	Возврат СтрокаГруппа;
	
КонецФункции

Процедура ЗаполнитьДеревоСобытий()
	
	Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
		
		СтрокаДерева = ДеревоСобытий.Строки.Найти(КлючИЗначение.Ключ, "ИмяРеквизита", Истина);
		СтрокаДерева.Метка = ЭтаФорма[КлючИЗначение.Ключ];
		
	КонецЦикла; 
	
	УстановитьФлажокСтрокиПоПодчиненным(ДеревоСобытий.Строки[0], Истина);
	
КонецПроцедуры

Процедура НадписьНастроитьДоступНажатие(Элемент)
	
	НастроитьДоступ(Истина);	
	
КонецПроцедуры

Процедура НадписьНастроитьОтказДоступаНажатие(Элемент)
	
	НастроитьДоступ(Ложь);
	
КонецПроцедуры

Процедура УстановитьФлажкиДляСобытийДоступа()
	
	Если НастройкиДоступа <> Неопределено Тогда
		Событие_Доступ_Доступ = Истина;
		Если мЛиВидДерево Тогда
			констСтрокаДереваДоступ_Доступ.Метка = 1;			
			УстановитьФлажкиРодителей(констСтрокаДереваДоступ_Доступ, Истина);			
			УстановитьФлажкиПотомков(констСтрокаДереваДоступ_Доступ);
		Иначе
			УстановитьОбщиеФлажки();
		КонецЕсли;                  		
	КонецЕсли; 
	
	Если НастройкиОтказаВДоступе <> Неопределено Тогда
		Событие_Доступ_ОтказВДоступе = Истина;
		Если мЛиВидДерево Тогда
			констСтрокаДереваДоступ_ОтказВДоступе.Метка = 1;			
			УстановитьФлажкиРодителей(констСтрокаДереваДоступ_Доступ, Истина);			
			УстановитьФлажкиПотомков(констСтрокаДереваДоступ_Доступ);
		Иначе
			УстановитьОбщиеФлажки();
		КонецЕсли;                  		
	КонецЕсли; 
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос(НСтр("ru = 'Настройки были изменены. Уверены?'"), РежимДиалогаВопрос.ДаНет, 60);
		Отказ = (Ответ = КодВозвратаДиалога.Нет);	
		
	КонецЕсли;  
	
КонецПроцедуры

Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
	
	Отказ = Не ПравоДоступа("Администрирование", Метаданные);
	
	Если Отказ Тогда
		
		Предупреждение("Настраивать журнал регистрации могут только пользователи с правом ""Администрирование""!");
		Возврат;
		
	КонецЕсли;  
	
	мЛиВидДерево = ВосстановитьЗначение(Строка(Метаданные()) + ".Форма/ОтображатьДерево");
	Если мЛиВидДерево = Неопределено Тогда
		мЛиВидДерево = Истина;		
	КонецЕсли; 
	констКнопка_ВидЗакладки.Пометка = Не мЛиВидДерево;
	констКнопка_ВидДерево.Пометка = мЛиВидДерево;
	
	мЛиОтображатьИмена = ВосстановитьЗначение(Строка(Метаданные()) + ".Форма/ОтображатьИмена");
	Если мЛиОтображатьИмена = Неопределено Тогда
		мЛиОтображатьИмена = Ложь;		
	КонецЕсли; 
	
	ДеревоСобытий.Строки.Добавить().Событие = "Все события";
	ЭлементыФормы.ДеревоСобытий.Колонки.Событие.ОтображатьИерархию = Истина;
		
	ИнициализироватьИнформациюОСобытиях();
	ЗаполнитьПервоначальныеНастройки();		 
	ОформитьФормуПоВидуОтображения(Истина);
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	ПроверкаДоступностиКнопкиПрименить();
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	СохранитьЗначение(Строка(Метаданные()) + ".Форма/ОтображатьДерево", мЛиВидДерево); 	
	СохранитьЗначение(Строка(Метаданные()) + ".Форма/ОтображатьИмена", мЛиОтображатьИмена);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

Процедура КоманднаяПанель1ПеречитатьНастройки(Кнопка)
	
	Если Модифицированность Тогда
		
		Ответ = Вопрос(НСтр("ru = 'Будут перечитаны текущие настройки журнала. Уверены?'"), РежимДиалогаВопрос.ДаНет, 60);
		
		Если Ответ = КодВозвратаДиалога.Да Тогда
			
			ЗаполнитьПервоначальныеНастройки();
			Модифицированность = Ложь;
			ОформитьФормуПоВидуОтображения(); 
			
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОсновныеДействияФормыПрименить(Кнопка)
	
	Если Не Модифицированность Тогда 		 
		Возврат;		 
	КонецЕсли; 
	
	Если ПрименитьИзменившиесяНастройки() Тогда              			
		Модифицированность = Ложь;
		СообщитьСТекущимВременем("Настройки успешно применены!");
	Иначе
		Предупреждение("Не удалось применить некоторые настройки. Подробности в окне сообщений");
	КонецЕсли;  
	
	ОформитьУровниРегистрацииЖР();
	Обновить();
	
КонецПроцедуры

Процедура КоманднаяПанель1ПрочитатьИзФайла(Кнопка)
	
	Перем ИспользованиеСобытия;
	Перем лНастройкиДоступа;
	Перем лНастройкиОтказаВДоступе;
	Перем лУровеньРегистрации;
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.ПолноеИмяФайла = "";
	Диалог.Фильтр = ирНеглобальный.ПолучитьСтрокуФильтраДляВыбораФайлаЛкс("xml", "Настройка журнала регистрации");
		
	Если Не Диалог.Выбрать() Тогда
		Возврат;		
	КонецЕсли;
	
	ОчиститьСообщения();
	
	БылаМодифицированность = Модифицированность;
	БылиНастройки = Новый Структура();
	
	Попытка
		
		ЧтениеХМЛ = Новый ЧтениеXML;
		ЧтениеХМЛ.ОткрытьФайл(Диалог.ПолноеИмяФайла);
		СтруктураИзФайла = СериализаторXDTO.ПрочитатьXML(ЧтениеХМЛ);
		Если СтруктураИзФайла <> Неопределено Тогда
			
			СтруктураИзФайла.Свойство("УровеньРегистрации", лУровеньРегистрации);
			Если лУровеньРегистрации <> Неопределено Тогда
				
				Модифицированность = УровеньРегистрации <> лУровеньРегистрации ИЛИ Модифицированность; 
				БылиНастройки.Вставить("УровеньРегистрации", УровеньРегистрации);
				УровеньРегистрации = лУровеньРегистрации;
				
			КонецЕсли;
			
			Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
				
				СтруктураИзФайла.Свойство(КлючИЗначение.Ключ, ИспользованиеСобытия);
				Если ИспользованиеСобытия <> Неопределено Тогда
					
					Модифицированность = ЭтаФорма[КлючИЗначение.Ключ] <> ИспользованиеСобытия ИЛИ Модифицированность; 
					БылиНастройки.Вставить(КлючИЗначение.Ключ, ЭтаФорма[КлючИЗначение.Ключ]);
					ЭтаФорма[КлючИЗначение.Ключ] = ИспользованиеСобытия;
					
				КонецЕсли; 
				
				СтруктураИзФайла.Свойство("НастройкиДоступа", лНастройкиДоступа);
				БылиНастройки.Вставить("НастройкиДоступа", НастройкиДоступа);
				мМенялисьНастройкиДоступа = Ложь
											Или мМенялисьНастройкиДоступа
											Или НЕ (Истина 
												И НастройкиДоступа = Неопределено
												И лНастройкиДоступа = Неопределено);
				Модифицированность =  Модифицированность Или мМенялисьНастройкиДоступа;
				НастройкиДоступа = лНастройкиДоступа;
				ОчиститьНастройкиДоступаОтНеизвестныхМетаданных(НастройкиДоступа);
				
				СтруктураИзФайла.Свойство("НастройкиОтказаВДоступе", лНастройкиОтказаВДоступе);
				БылиНастройки.Вставить("НастройкиОтказаВДоступе", НастройкиОтказаВДоступе);
				мМенялисьНастройкиОтказаВДоступе = Ложь
													Или мМенялисьНастройкиОтказаВДоступе 
													Или НЕ (Истина 
															И НастройкиОтказаВДоступе = Неопределено
															И лНастройкиОтказаВДоступе = Неопределено);
				Модифицированность = Модифицированность Или мМенялисьНастройкиОтказаВДоступе; 
				НастройкиОтказаВДоступе = лНастройкиОтказаВДоступе;
				ОчиститьНастройкиДоступаОтНеизвестныхМетаданных(НастройкиОтказаВДоступе);
				
			КонецЦикла; 
			
		Иначе
			
			ВызватьИсключение "Неверный формат файла";
			
		КонецЕсли; 
		
		СообщитьСТекущимВременем("Настройки успешно прочитаны из файла", СтатусСообщения.Информация);
		ОформитьФормуПоВидуОтображения();
		
	Исключение
		
		ЧтениеХМЛ.Закрыть();
		СообщитьСТекущимВременем(ОписаниеОшибки());
		Модифицированность = БылаМодифицированность;
		ЗаполнитьЗначенияСвойств(ЭтаФорма, БылиНастройки); 
		Предупреждение("Не удалось прочитать настройки из файла!");
		
	КонецПопытки;
	
КонецПроцедуры

Процедура КоманднаяПанель1СохранитьВФайл(Кнопка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	Диалог.ПолноеИмяФайла = "";
	Диалог.Фильтр = ирНеглобальный.ПолучитьСтрокуФильтраДляВыбораФайлаЛкс("xml", "Настройка журнала регистрации");
	
	Если Не Диалог.Выбрать() Тогда
		Возврат;		
	КонецЕсли;
	
	ОчиститьСообщения();
	
	Попытка
		
		ЗаписьХМЛ = Новый ЗаписьXML;
		ЗаписьХМЛ.ОткрытьФайл(Диалог.ПолноеИмяФайла);
		ЗаписьХМЛ.ЗаписатьОбъявлениеXML();
		СтруктураСобытий = Новый Структура;
		
		СтруктураСобытий.Вставить("УровеньРегистрации", УровеньРегистрации);
		
		Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
			
			СтруктураСобытий.Вставить(КлючИЗначение.Ключ, ЭтаФорма[КлючИЗначение.Ключ]);
			
		КонецЦикла; 
		
		СтруктураСобытий.Вставить("НастройкиДоступа", НастройкиДоступа);
		СтруктураСобытий.Вставить("НастройкиОтказаВДоступе", НастройкиОтказаВДоступе);
		
		СериализаторXDTO.ЗаписатьXML(ЗаписьХМЛ, СтруктураСобытий);
		ЗаписьХМЛ.Закрыть();
		
		СообщитьСТекущимВременем("Настройки успешно сохранены в файл!", СтатусСообщения.Информация);
		
	Исключение
		
		ЗаписьХМЛ.Закрыть();
		СообщитьСТекущимВременем(ОписаниеОшибки());
		
	КонецПопытки;
	
КонецПроцедуры

Процедура КоманднаяПанель1ИмяИлиСиноним(Кнопка)
	
	мЛиОтображатьИмена = НЕ мЛиОтображатьИмена;
	ОтобразитьИменаИлиСинонимыСобытий();
	
КонецПроцедуры

Процедура КоманднаяПанель1ВидДерево(Кнопка)
	
	Если НЕ констКнопка_ВидДерево.Пометка Тогда
		
		констКнопка_ВидДерево.Пометка = Истина;
		констКнопка_ВидЗакладки.Пометка = Ложь;
		мЛиВидДерево = Истина;
		ОформитьФормуПоВидуОтображения();
		
	КонецЕсли;                	 
	
КонецПроцедуры

Процедура КоманднаяПанель1ВидЗакладки(Кнопка)
	
	Если НЕ констКнопка_ВидЗакладки.Пометка Тогда
		
		констКнопка_ВидЗакладки.Пометка = Истина;
		констКнопка_ВидДерево.Пометка = Ложь;
		мЛиВидДерево = Ложь;
		ОформитьФормуПоВидуОтображения();
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоманднаяПанельФормаОПодсистеме(Кнопка)
	ЛксОткрытьСправкуПоПодсистеме(ЭтотОбъект);
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ

Процедура ПанельИспользованиеСобытийПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	УстановитьОбщиеФлажки();
	
КонецПроцедуры  

Процедура ВсеСобытияТекущейГруппыПриИзменении(Элемент)
	
	ТекущаяГруппа = ЭлементыФормы.ПанельИспользованиеСобытий.ТекущаяСтраница.Имя;
	СобытияГруппы = мГруппыСобытий[ТекущаяГруппа]; 
	
	Для Каждого ИмяСобытия Из СобытияГруппы Цикл
		
		ЭтаФорма[ИмяСобытия]  = ВсеСобытияТекущейГруппы;
		
	КонецЦикла;
	
	УстановитьОбщиеФлажки(Истина, Ложь);
	
КонецПроцедуры 

Процедура ВключитьВыключитьВсеСобытияПриИзменении(Элемент)
	
	Для Каждого КлючИЗначение Из мСоответствияСобытий Цикл
		
		ЭтаФорма[КлючИЗначение.Ключ]  = ВсеСобытия;
		
	КонецЦикла; 
	
	ВсеСобытияТекущейГруппы = ВсеСобытия;	 
	
КонецПроцедуры

Процедура СобытиеПриИзменении(Элемент)
	
	УстановитьОбщиеФлажки();
	
КонецПроцедуры

Процедура ПереключательУровеньРегистрацииПриИзменении(Элемент)
	
	Если НЕ мЛиВидДерево Тогда
		
		ОформитьСобытияПоУровнюРегистрации();
		
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНЫХ ПОЛЕЙ ФОРМЫ

Процедура ДеревоСобытийПриИзмененииФлажка(Элемент, Колонка)
	
	ТекущаяСтрока = ЭлементыФормы.ДеревоСобытий.ТекущаяСтрока;
	
	Если ТекущаяСтрока <> Неопределено Тогда
		
		ТекущаяСтрока.Метка = ?(ТекущаяСтрока.Метка = 0 ИЛИ ТекущаяСтрока.Метка = 2, 1, 0);
		
		УстановитьФлажкиРодителей(ТекущаяСтрока, Истина);
		УстановитьФлажкиПотомков(ТекущаяСтрока);
		
		Для Каждого СтрокаГруппа Из ДеревоСобытий.Строки[0].Строки Цикл
			
			Для Каждого СтрокаСобытие Из СтрокаГруппа.Строки Цикл
				
				ЭтаФорма[СтрокаСобытие.ИмяРеквизита] = СтрокаСобытие.Метка;	
				
			КонецЦикла; 
			
		КонецЦикла; 
		
		Модифицированность = Истина;
		
	КонецЕсли;   	
	
КонецПроцедуры

Процедура ДеревоСобытийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка = ЭлементыФормы.ДеревоСобытий.Колонки.ДополнительнаяНастройка Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьНастройкуДоступа(ВыбраннаяСтрока);
	КонецЕсли; 
	
КонецПроцедуры

Функция ОткрытьНастройкуДоступа(ВыбраннаяСтрока, Метаданные = Неопределено)

	Если ВыбраннаяСтрока = констСтрокаДереваДоступ_Доступ Тогда
		НастроитьДоступ(Истина, Метаданные);
	ИначеЕсли ВыбраннаяСтрока = констСтрокаДереваДоступ_ОтказВДоступе Тогда
		НастроитьДоступ(Ложь, Метаданные);
	КонецЕсли;
	Возврат Неопределено;

КонецФункции

Процедура ДеревоСобытийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ЦветСерый = WebЦвета.Серый;
	ЦветЧерный = WebЦвета.Черный;
	
	ОформлениеСтроки.Ячейки.Событие.УстановитьФлажок(ДанныеСтроки.Метка);
	Если ДанныеСтроки.ИмяРеквизита <> "" Тогда
		ОформлениеСтроки.Ячейки.Событие.УстановитьКартинку(мКартинкиУровнейСобытий[мУровниСобытий[ДанныеСтроки.ИмяРеквизита]]);		
		УровеньСобытия = мУровниСобытий[ДанныеСтроки.ИмяРеквизита]; 
		Инд = мМассивУровнейРегистрацийПоВажности.Найти(УровеньСобытия);
		Если (Инд + 1) <= УровеньРегистрации Тогда
			ОформлениеСтроки.Ячейки.Событие.ЦветТекста = ЦветЧерный;
		Иначе
			ОформлениеСтроки.Ячейки.Событие.ЦветТекста = ЦветСерый;
		КонецЕсли;            		
	КонецЕсли;

	Если ДанныеСтроки = констСтрокаДереваДоступ_Доступ Тогда
		ОформлениеСтроки.Ячейки.ДополнительнаяНастройка.ЦветТекста = ЦветаСтиля.ирТекстИнформационнойНадписи;
		ОформлениеСтроки.Ячейки.ДополнительнаяНастройка.УстановитьТекст("настроить" + " (" + ?(НастройкиДоступа = Неопределено, "0", НастройкиДоступа.Количество()) + ")");
		ОформлениеСтроки.Ячейки.Событие.УстановитьТекст(ДанныеСтроки.Событие + ?(НастройкиДоступа <> Неопределено, " (регистрировать с отбором)", " (не регистрировать ничего)"));
	ИначеЕсли ДанныеСтроки = констСтрокаДереваДоступ_ОтказВДоступе Тогда
		ОформлениеСтроки.Ячейки.ДополнительнаяНастройка.ЦветТекста = ЦветаСтиля.ирТекстИнформационнойНадписи;		
		ОформлениеСтроки.Ячейки.ДополнительнаяНастройка.УстановитьТекст("настроить" + " (" + ?(НастройкиОтказаВДоступе = Неопределено, "0", НастройкиОтказаВДоступе.Количество()) + ")");
		ОформлениеСтроки.Ячейки.Событие.УстановитьТекст(ДанныеСтроки.Событие + ?(НастройкиОтказаВДоступе <> Неопределено, " (регистрировать с отбором)", " (регистрировать все)"));
	КонецЕсли;  	
	
КонецПроцедуры

Процедура ДеревоСобытийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	
КонецПроцедуры   

Процедура КП_ДеревоСобытийАнализЖурнала(Кнопка)
	
	СтрокаДерева = ЭлементыФормы.ДеревоСобытий.ТекущаяСтрока;
	Если СтрокаДерева = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	Если СтрокаДерева.Строки.Количество() > 0 Тогда
		Возврат;
	КонецЕсли; 
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("Событие", СтрокаДерева.ИмяСобытия);
	Обработки.ирАнализЖурналаРегистрации.Создать().ОткрытьСОтбором(, , СтруктураОтбора);
	
КонецПроцедуры

Процедура СтруктураКоманднойПанелиНажатие(Кнопка)
	
	ирНеглобальный.ОткрытьСтруктуруКоманднойПанелиЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

ирНеглобальный.ВстроитьКнопкиСтруктурыКоманднойПанелиЛкс(ЭтаФорма);

констСобытиеДоступ_Доступ = "_$Access$_.Access";
констСобытиеДоступ_ОтказВДоступе = "_$Access$_.AccessDenied";

мМассивУровнейРегистрацийПоВажности = Новый Массив;
мМассивУровнейРегистрацийПоВажности.Добавить(УровеньЖурналаРегистрации.Ошибка);
мМассивУровнейРегистрацийПоВажности.Добавить(УровеньЖурналаРегистрации.Предупреждение);
мМассивУровнейРегистрацийПоВажности.Добавить(УровеньЖурналаРегистрации.Информация);
мМассивУровнейРегистрацийПоВажности.Добавить(УровеньЖурналаРегистрации.Примечание); 

констКнопка_ВидДерево = ЭлементыФормы.КоманднаяПанель1.Кнопки.Вид.Кнопки.ВидДерево;
констКнопка_ВидЗакладки = ЭлементыФормы.КоманднаяПанель1.Кнопки.Вид.Кнопки.ВидЗакладки;

констЖирныйШрифт = Новый Шрифт(, , Истина);
констОбычныйШрифт = Новый Шрифт;

