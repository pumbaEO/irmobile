Процедура ПередОткрытием(Отказ, СтандартнаяОбработка)
		
	Если ОбработкаОбъект.мНастройкиИнструментов.Свойство("РасположениеПанелиЗапуска") Тогда      		
		Попытка   			
			РасположениеПанелиЗапуска = Число(ОбработкаОбъект.мНастройкиИнструментов.РасположениеПанелиЗапуска);			
		Исключение                       			                                                            			
			РасположениеПанелиЗапуска = 1                                                                       			
		КонецПопытки;			
			
		Если РасположениеПанелиЗапуска <= 0 ИЛИ РасположениеПанелиЗапуска > 4 Тогда                             			
			РасположениеПанелиЗапуска = 1;                                                                      			
		КонецЕсли;                                                                                              		
	Иначе                                                                                                       		
		РасположениеПанелиЗапуска = 1;                                                                          		
	КонецЕсли; 
	
	Если ОбработкаОбъект.мНастройкиИнструментов.Свойство("ОпределениеСерверногоВремени") Тогда      		
		Попытка   			
			ОпределениеСерверногоВремени = Число(ОбработкаОбъект.мНастройкиИнструментов.ОпределениеСерверногоВремени);			
		Исключение                       			                                                            			
			ОпределениеСерверногоВремени = 1                                                                       			
		КонецПопытки;			
			
		Если ОпределениеСерверногоВремени <= 0 ИЛИ ОпределениеСерверногоВремени > 3 Тогда                             			
			ОпределениеСерверногоВремени = 1;                                                                      			
		КонецЕсли;                                                                                              		
	Иначе                                                                                                       		
		ОпределениеСерверногоВремени = 1;                                                                          		
	КонецЕсли;  	
	
	// Damian, 2013-03-25 --- Начало
	// получим значение флага "Запускать при старте"
	ЗапускатьПриСтарте = ОпределитьФлагЗапускаПриСтарте();
	// Damian, 2013-03-25 --- Конец
	
КонецПроцедуры

Процедура ОбновитьТекстОпределениеСерверногоВремени()
	
	Если ОпределениеСерверногоВремени = 1 Тогда 		
		ОпределениеСерверногоВремениСтрокой = "(Время клиента)"; 		
	ИначеЕсли ОпределениеСерверногоВремени = 2 Тогда    		
		ОпределениеСерверногоВремениСтрокой = "(Оперативная отметка времени)";  		
	ИначеЕсли ОпределениеСерверногоВремени = 3 Тогда    		
		ОпределениеСерверногоВремениСтрокой = "(Время сервера строки подключения с помощью скрипта)";  		
	КонецЕсли; 
	
КонецПроцедуры 

Процедура ОбновлениеОтображения()
	ОбновитьТекстОпределениеСерверногоВремени();
КонецПроцедуры
      
Процедура ОсновныеДействияФормыСохранитьНастройки(Кнопка)
	
	СтруктураНастроек = Новый Структура;
	СтруктураНастроек.Вставить("РасположениеПанелиЗапуска", РасположениеПанелиЗапуска);	
	СтруктураНастроек.Вставить("ОпределениеСерверногоВремени", ОпределениеСерверногоВремени);
	СтруктураНастроек.Вставить("СписокОбработок", СписокОбработок.Выгрузить());
	
	Попытка
		ОбработкаОбъект.ЗаписатьНастройки(СтруктураНастроек); 	
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	// Damian, 2013-03-25 --- Начало
	// запишем путь к обработке для автозапуска в файл *.v8i
	СохранитьПараметрыАвтозапуска(ЗапускатьПриСтарте);
	// Damian, 2013-03-25 --- Конец
	
	// оповестим об изменениях настройки
	Оповестить("ИзменениеНастроек");
	
	Закрыть();
	
КонецПроцедуры
  
Процедура ОпределениеСерверногоВремениОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

// Damian, 2013-03-25 --- Начало
// запишем путь к обработке для автозапуска в файл *.v8i
Процедура СохранитьПараметрыАвтозапуска(ЗапускатьПриСтарте)
	
	// имя этого файла
	ИмяФайлаОбработки = ЭтотОбъект.ИспользуемоеИмяФайла;
	
	// получим структуру списка баз
	ДеревоСписка = ПолучитьДеревоINIFile();
	
	Если ДеревоСписка = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// определим, какая база в этом списке наша
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	Отбор = Новый Структура("ЗначениеПараметра",СтрокаСоединения);
	СтрокиДерева = ДеревоСписка.Строки.НайтиСтроки(Отбор);
	
	Если СтрокиДерева.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// изменим значение
	ПараметрНайден = Ложь;
	СтрокаДерева = СтрокиДерева[0];
	Для Каждого Параметр Из СтрокаДерева.Строки Цикл
		
		ИмяПараметра = Параметр.ИмяПараметра;
		
		Если ИмяПараметра <> "AdditionalParameters" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЗапускатьПриСтарте Тогда
			Параметр.ЗначениеПараметра = "/EXECUTE """+ИмяФайлаОбработки+"""";
		Иначе	
			Параметр.ЗначениеПараметра = "";
		КонецЕсли;
		
		ПараметрНайден = Истина;
		
	КонецЦикла;
	
	// если параметра не было - надо добавить
	Если НЕ ПараметрНайден И ЗапускатьПриСтарте Тогда
		Параметр = СтрокаДерева.Строки.Добавить();
		Параметр.ИмяПараметра 		= "AdditionalParameters";
		Параметр.ЗначениеПараметра 	= "/EXECUTE """+ИмяФайлаОбработки+"""";
	КонецЕсли;
	
	// сохраним дерево назад в файлик
	СохранитьДеревоINIFile(ДеревоСписка);
	
КонецПроцедуры	

// определение значения флага запуска при старте
Функция ОпределитьФлагЗапускаПриСтарте() 
	
	ЗначениеФлага = Ложь;
	
	// имя этого файла
	ИмяФайлаОбработки = ЭтотОбъект.ИспользуемоеИмяФайла;
	
	// получим структуру списка баз
	ДеревоСписка = ПолучитьДеревоINIFile();
	
	Если ДеревоСписка = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// определим, какая база в этом списке наша
	СтрокаСоединения = СтрокаСоединенияИнформационнойБазы();
	Отбор = Новый Структура("ЗначениеПараметра",СтрокаСоединения);
	СтрокиДерева = ДеревоСписка.Строки.НайтиСтроки(Отбор);
	
	Если СтрокиДерева.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	// изменим значение
	СтрокаДерева = СтрокиДерева[0];
	Для Каждого Параметр Из СтрокаДерева.Строки Цикл
		
		ИмяПараметра 		= Параметр.ИмяПараметра;
		
		Если ИмяПараметра <> "AdditionalParameters" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Найти(Параметр.ЗначениеПараметра,ИмяФайлаОбработки) > 0 Тогда
			ЗначениеФлага = Истина;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЗначениеФлага;
	
КонецФункции

// получение дерева из INI-файла
Функция ПолучитьДеревоINIFile()
	
	App 	= Новый COMОбъект("Shell.Application");
	AppData = App.Namespace(26).Self.Path;
	
	мИмяФайлаСписка = AppData+"\1C\1CEStart\ibases.v8i";
	
	// открываем файл в кодировке UTF8
	мФайлСписка = Новый ЧтениеТекста;
	
	Попытка
		мФайлСписка.Открыть(мИмяФайлаСписка, КодировкаТекста.UTF8);
	Исключение
		Сообщить("Не удалось открыть файл "+мИмяФайлаСписка);
		Возврат Неопределено;
	КонецПопытки;
	
	// подготовим результирующее дерево
	ДеревоСписка = Новый ДеревоЗначений;
	ДеревоСписка.Колонки.Добавить("ИмяПараметра");
	ДеревоСписка.Колонки.Добавить("ЗначениеПараметра");
	
	Разделитель 		= "=";
	СтрокаДерева		= Неопределено;
	
	// читаем файл
	ТекущаяСтрока = мФайлСписка.ПрочитатьСтроку();
	Пока НЕ ТекущаяСтрока = Неопределено Цикл
		
		ТекущаяСтрока = СокрЛП(ТекущаяСтрока);
		Если НЕ ЗначениеЗаполнено(ТекущаяСтрока) Тогда
			ТекущаяСтрока = мФайлСписка.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;
		
		ПервыйСимвол = Лев(ТекущаяСтрока,1);
		
		// начало раздела
		Если ПервыйСимвол = "[" Тогда
			
			СтрокаДерева = ДеревоСписка.Строки.Добавить();
			
			ИмяБазы = СтрЗаменить(ТекущаяСтрока,"[","");
			ИмяБазы = СтрЗаменить(ИмяБазы,"]","");
			
			СтрокаДерева.ИмяПараметра = ИмяБазы;
			
			ТекущаяСтрока = мФайлСписка.ПрочитатьСтроку();
			Продолжить;
			
		Иначе
			
			ПозицияРазделителя 	= Найти(ТекущаяСтрока,Разделитель);
			ИмяПараметра 		= Лев(ТекущаяСтрока,ПозицияРазделителя-1);
			ЗначениеПараметра 	= Сред(ТекущаяСтрока,ПозицияРазделителя+1);
			
			СтрокаПараметра		= СтрокаДерева.Строки.Добавить();
			СтрокаПараметра.ИмяПараметра 		= ИмяПараметра;
			СтрокаПараметра.ЗначениеПараметра 	= ЗначениеПараметра;
			
			// пропишем отдельно в таблице строку соединения базы
			Если ИмяПараметра = "Connect" Тогда
				СтрокаДерева.ЗначениеПараметра = ЗначениеПараметра;
			КонецЕсли;
			
			ТекущаяСтрока = мФайлСписка.ПрочитатьСтроку();
			Продолжить;
			
		КонецЕсли;
		
	КонецЦикла;	
	
	App = Неопределено;
	Возврат ДеревоСписка;
	
КонецФункции	

// сохранение дерева в INI-файл
Процедура СохранитьДеревоINIFile(ДеревоСписка)
	
	App 	= Новый COMОбъект("Shell.Application");
	AppData = App.Namespace(26).Self.Path;
	
	мИмяФайлаСписка = AppData+"\1C\1CEStart\ibases.v8i";
	
	// открываем файл в кодировке UTF8
	мФайлСписка = Новый ЗаписьТекста;
	
	Попытка
		мФайлСписка.Открыть(мИмяФайлаСписка, КодировкаТекста.UTF8);
	Исключение
		Сообщить("Не удалось открыть файл "+мИмяФайлаСписка);
		Возврат;
	КонецПопытки;
	
	Для Каждого СтрокаДерева Из ДеревоСписка.Строки Цикл
		
		СтрокаФайла = "["+СтрокаДерева.ИмяПараметра+"]";
		мФайлСписка.ЗаписатьСтроку(СтрокаФайла);
		
		Для Каждого Параметр Из СтрокаДерева.Строки Цикл
			
			СтрокаФайла = ""+Параметр.ИмяПараметра+"="+Параметр.ЗначениеПараметра;
			мФайлСписка.ЗаписатьСтроку(СтрокаФайла);
			
		КонецЦикла;
		
	КонецЦикла;
	
	мФайлСписка.Закрыть();
	App = Неопределено;
	
КонецПроцедуры	

// перезаполнение списка обработок
Процедура КоманднаяПанельСписокОбработокПерезаполнить(Кнопка)
	
	//СписокОбработок.Очистить();
	
	СканироватьПапку = Истина;
	ЗаполнитьСписокОбработок(СканироватьПапку);
	
КонецПроцедуры

// выбор како-либо обработки для открытия
Процедура ТаблицаОбъектовВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ИмяОбработки = ЭлементыФормы.СписокОбработок.ТекущиеДанные.ИмяОбработки;
	ПодключитьВнешнююОбработку(ИмяОбработки).ПолучитьФорму().Открыть();
	
КонецПроцедуры

// установить флажки
Процедура КоманднаяПанельСписокОбработокУстановитьФлажки(Кнопка)
	Для Каждого Строка Из СписокОбработок Цикл
		Строка.Видимость = Истина;
	КонецЦикла;
КонецПроцедуры

// снять флажки
Процедура КоманднаяПанельСписокОбработокСнятьФлажки(Кнопка)
	Для Каждого Строка Из СписокОбработок Цикл
		Строка.Видимость = Ложь;
	КонецЦикла;
КонецПроцедуры

// добавление разделителя в список
Процедура КоманднаяПанельСписокОбработокДобавитьРазделитель(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.СписокОбработок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИндексТекущейСтроки = ТекущиеДанные.НомерСтроки;
	
	НоваяСтрока = СписокОбработок.Вставить(ИндексТекущейСтроки);
	НоваяСтрока.ИмяОбработки 		= "Разделитель";
	НоваяСтрока.Видимость 			= Истина;
	НоваяСтрока.СинонимОбработки 	= "---------- Разделитель ----------";
	
КонецПроцедуры

// добавить произвольную обработку/отчет
Процедура КоманднаяПанельСписокОбработокДействие(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.СписокОбработок.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ИндексТекущейСтроки = ТекущиеДанные.НомерСтроки;
	
	// получаем файл и его данные
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.МножественныйВыбор = Ложь;
	Диалог.Каталог = мКаталогОбработки + "Подключаемые обработки";
	Диалог.Фильтр = "Отчеты и обработки 1С (*.epf, *.erf)|*epf;*erf";
	Если НЕ Диалог.Выбрать() Тогда
		Возврат;
	КонецЕсли;
	
	мИмяФайлаОбработки = Диалог.ПолноеИмяФайла;
	мФайл = Новый Файл(мИмяФайлаОбработки);
	
	ТипФайла = НРег(Прав(мИмяФайлаОбработки,3));
	ИмяОбработки = мФайл.ИмяБезРасширения;
	
	мОбработка = Неопределено;
	Если ТипФайла = "epf" Тогда
		мОбработка = ВнешниеОбработки.Создать(мИмяФайлаОбработки);
	ИначеЕсли ТипФайла = "erf" Тогда
		мОбработка = ВнешниеОтчеты.Создать(мИмяФайлаОбработки);
	КонецЕсли;
	
	Если мОбработка = Неопределено Тогда
		Сообщить("Ошибка открытия внешнего объекта: "+мИмяФайлаОбработки);
	КонецЕсли;
	
	МетаданныеОбработки = мОбработка.Метаданные();
	СинонимОбработки = МетаданныеОбработки.Синоним;
	
	// добавляем файл
	НоваяСтрока = СписокОбработок.Вставить(ИндексТекущейСтроки);
	НоваяСтрока.ИмяОбработки 		= ИмяОбработки;
	НоваяСтрока.ТипФайла 			= ТипФайла;
	НоваяСтрока.Видимость 			= Истина;
	НоваяСтрока.СинонимОбработки 	= СинонимОбработки;
	
КонецПроцедуры

// восстановление стандартных настроек для списка обработок
Процедура КоманднаяПанельСписокОбработокВосстановитьСтандартныеНастройки(Кнопка)
	
	ЗаполнитьСписокОбработокСтандартныеНастройки();
	
КонецПроцедуры
// Damian, 2013-03-25 --- Конец














