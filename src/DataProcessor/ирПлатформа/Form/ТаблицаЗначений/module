Перем СтараяТаблицаКолонок;
Перем ЭтоДерево;
Перем РасширениеФайла;

// Обработка выбора значения в таблице
//
Процедура ТаблицаВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)

	ирНеглобальный.ЯчейкаТабличногоПоляРасширенногоЗначения_ВыборЛкс(Элемент, СтандартнаяОбработка);

КонецПроцедуры // ТаблицаВыбор

Функция ПолучитьРезультат()
	
	Возврат ЭлементыФормы.ПолеТаблицы.Значение;
	
КонецФункции

Процедура КоманднаяПанельТаблицаПустые(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ЭлементыФормы.ПолеТаблицы.ОбновитьСтроки();
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаСжатьКолонки(Кнопка)
	
	ЛксСжатьКолонкиТабличногоПоля(ЭлементыФормы.ПолеТаблицы);
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаШиринаКолонок(Кнопка)
	
	ЛксВвестиИУстановитьШиринуКолонокТабличногоПоля(ЭлементыФормы.ПолеТаблицы);
	
КонецПроцедуры

Функция ОбновитьКолонкуТабличногоПоляПоКолонкеДанных(КолонкаДанных)
	
	Если КолонкаДанных.Имя = "" Тогда
		Возврат Неопределено;
	КонецЕсли;
	КолонкиТП = ЭлементыФормы.ПолеТаблицы.Колонки;
	КолонкаТП = КолонкиТП.Найти(КолонкаДанных.Имя);
	Если КолонкаТП = Неопределено Тогда
		КолонкаТП = КолонкиТП.Добавить(КолонкаДанных.Имя); 
	КонецЕсли; 
	КолонкаТП.Данные = КолонкаДанных.Имя;
	ТекстШапки = КолонкаДанных.Имя;
	Если ЗначениеЗаполнено(КолонкаДанных.Заголовок) Тогда
		ТекстШапки = ТекстШапки + " (" + КолонкаДанных.Заголовок + ")";
	КонецЕсли; 
	КолонкаТП.ТекстШапки = ТекстШапки;
	КолонкаТП.ОтображатьИерархию = Ложь;
	КолонкаТП.ЭлементУправления.КнопкаВыбора = Истина;
	КолонкаТП.ЭлементУправления.ВыбиратьТип = Истина;
	КолонкаТП.ЭлементУправления.КнопкаОчистки = Истина;
	КолонкаТП.ЭлементУправления.КнопкаОткрытия = Истина;
	КолонкаТП.ЭлементУправления.УстановитьДействие("НачалоВыбора", Новый Действие("ЯчейкаНачалоВыбора"));
	Возврат КолонкаТП;
	
КонецФункции

Процедура ОбновитьТаблицуКолонок()

	СтароеИмя = Неопределено;
	Если ЭлементыФормы.ТаблицаКолонок.ТекущаяСтрока <> Неопределено Тогда
		СтароеИмя = ЭлементыФормы.ТаблицаКолонок.ТекущаяСтрока.Имя;
	КонецЕсли;
	ТаблицаКолонок.Очистить();
	Для Каждого Колонка Из ЭлементыФормы.ПолеТаблицы.Значение.Колонки Цикл
		СтрокаКолонки = ТаблицаКолонок.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаКолонки, Колонка); 
		СтрокаКолонки.ИмяСтаройКолонки = Колонка.Имя;
		ОбновитьКолонкуТабличногоПоляПоКолонкеДанных(Колонка);
	КонецЦикла;
	СтараяТаблицаКолонок = ТаблицаКолонок.Скопировать();
	Если СтароеИмя <> Неопределено Тогда
		НоваяТекущаяСтрока = ТаблицаКолонок.Найти(СтароеИмя, "Имя");
		ЭлементыФормы.ТаблицаКолонок.ТекущаяСтрока = НоваяТекущаяСтрока;
	КонецЕсли;
	ОбновитьКолонкиТаблицы(); // 18.03.2012

КонецПроцедуры // ОбновитьТаблицуКолонок()

Процедура УстановитьРедактируемоеЗначение(НовоеЗначение)
	
	ТипОбъекта = ТипЗнч(НовоеЗначение);
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ТипОбъекта);
	ЭтоДерево = (ТипОбъекта = Тип("ДеревоЗначений"));
	ЭлементыФормы.ПолеТаблицы.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
	ЭлементыФормы.ПолеТаблицы.Значение = НовоеЗначение;
	ЭтаФорма.Заголовок = ТипОбъекта;
	ОбновитьТаблицуКолонок();
	ЭлементыФормы.КоманднаяПанельТаблица.Кнопки.КонсольКомпоновки.Доступность = Не ЭтоДерево;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Если НачальноеЗначениеВыбора = Неопределено Тогда
		НачальноеЗначениеВыбора = Новый ТаблицаЗначений;
		НачальноеЗначениеВыбора.Колонки.Добавить("Колонка1", Новый ОписаниеТипов("Строка"));
	КонецЕсли;
	УстановитьРедактируемоеЗначение(НачальноеЗначениеВыбора);

КонецПроцедуры

Процедура ТаблицаПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ирНеглобальный.ТабличноеПолеПриВыводеСтрокиЛкс(Элемент, ОформлениеСтроки, ДанныеСтроки, ЭлементыФормы.КоманднаяПанельТаблица.Кнопки.Пустые.Пометка);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыОК(Кнопка = Неопределено)
	
	Модифицированность = Ложь;
	НовоеЗначение = ПолучитьРезультат();
	ирНеглобальный.ПрименитьИзмененияИЗакрытьФормуЛкс(ЭтаФорма, НовоеЗначение);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыИсследовать(Кнопка)
	
	Исследовать(ПолучитьРезультат());
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	
	Если ЭтоДерево Тогда
		Если ЭлементыФормы.ПолеТаблицы.ТекущаяСтрока <> Неопределено Тогда
			Родитель = ЭлементыФормы.ПолеТаблицы.ТекущаяСтрока.Родитель;
		КонецЕсли; 
		Если Родитель = Неопределено Тогда
			Родитель = ЭлементыФормы.ПолеТаблицы.Значение;
		КонецЕсли; 
		Количество = Родитель.Строки.Количество();
	Иначе
		Количество = ЭлементыФормы.ПолеТаблицы.Значение.Количество();
	КонецЕсли; 
	Если Не ирНеглобальный.СериализацииРавныЛкс(СтараяТаблицаКолонок, ТаблицаКолонок) Тогда 
		ОбновитьКолонкиТаблицы();
		СтараяТаблицаКолонок = ТаблицаКолонок.Скопировать();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбновитьКолонкиТаблицы()
	
	Таблица = ЭлементыФормы.ПолеТаблицы.Значение;
	КолонкиДляУдаления = Новый Массив;
	Для Каждого КолонкаДляУдаления Из Таблица.Колонки Цикл
		КолонкиДляУдаления.Добавить(КолонкаДляУдаления);
	КонецЦикла;
	
	Для Каждого СтрокаКолонки Из ТаблицаКолонок Цикл
		Если СтрокаКолонки.ИмяСтаройКолонки <> "" Тогда
			ИмяСтаройКолонки = СтрокаКолонки.ИмяСтаройКолонки;
			СтараяКолонка = Таблица.Колонки[ИмяСтаройКолонки];
			КолонкиДляУдаления.Удалить(КолонкиДляУдаления.Найти(СтараяКолонка));
			
			//Если Не ирНеглобальный.СтрокиРавныЛкс(ИмяСтаройКолонки, СтрокаКолонки.Имя) Тогда
			Если ИмяСтаройКолонки <> СтрокаКолонки.Имя Тогда
				СтараяКолонка.Имя = СтрокаКолонки.Имя;
				Колонка = ЭлементыФормы.ПолеТаблицы.Колонки.Найти(ИмяСтаройКолонки);
				Колонка.Имя = СтрокаКолонки.Имя;
				СтрокаКолонки.ИмяСтаройКолонки = СтрокаКолонки.Имя;
				ОбновитьКолонкуТабличногоПоляПоКолонкеДанных(СтараяКолонка);			
			КонецЕсли;
			
			Если Не ирНеглобальный.СериализацииРавныЛкс(СтараяКолонка.ТипЗначения, СтрокаКолонки.ТипЗначения) Тогда
				ВременноеИмя = ирКэш.Получить().ПолучитьИдентификаторИзПредставления(Новый УникальныйИдентификатор());
				ВременнаяКолонка = Таблица.Колонки.Добавить(ВременноеИмя, СтрокаКолонки.ТипЗначения);
				Если ЭтоДерево Тогда
					ВсеСтроки = ирНеглобальный.ПолучитьВсеСтрокиДереваЗначенийЛкс(Таблица);
				Иначе
					ВсеСтроки = Таблица;
				КонецЕсли; 
				Для Каждого СтрокаТаблицы Из ВсеСтроки Цикл
					ОбработкаПрерыванияПользователя();
					СтрокаТаблицы[ВременноеИмя] = СтрокаТаблицы[ИмяСтаройКолонки];
				КонецЦикла; 
				Таблица.Колонки.Удалить(ИмяСтаройКолонки);
				ВременнаяКолонка.Имя = СтрокаКолонки.Имя;
				ОбновитьКолонкуТабличногоПоляПоКолонкеДанных(ВременнаяКолонка);
				СтараяКолонка = ВременнаяКолонка;
			КонецЕсли;
		Иначе
			Если СтрокаКолонки.Имя = "" Тогда
				 Продолжить;
			КонецЕсли; 
			СтараяКолонка = Таблица.Колонки.Добавить(СтрокаКолонки.Имя, СтрокаКолонки.ТипЗначения);
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтараяКолонка, СтрокаКолонки, "Заголовок, Ширина"); 
		ОбновитьКолонкуТабличногоПоляПоКолонкеДанных(СтараяКолонка);
		Если СтрокаКолонки.ИмяСтаройКолонки = "" Тогда
			СтрокаКолонки.ИмяСтаройКолонки = СтрокаКолонки.Имя;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КолонкаДляУдаления Из КолонкиДляУдаления Цикл
		ЭлементыФормы.ПолеТаблицы.Колонки.Удалить(ЭлементыФормы.ПолеТаблицы.Колонки[КолонкаДляУдаления.Имя]);
		Таблица.Колонки.Удалить(КолонкаДляУдаления);
	КонецЦикла; 
	Если ЭлементыФормы.ПолеТаблицы.Колонки.Количество() > 0 Тогда
		ЭлементыФормы.ПолеТаблицы.Колонки[0].ОтображатьИерархию = Истина;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ИзменитьСвернутостьПанелиКолонок(Видимость = Истина)
	
	ЛксИзменитьСвернутость(Видимость, ЭлементыФормы.ТаблицаКолонок, ЭлементыФормы.гРазделитель, ЭтаФорма.Панель, "верх");

КонецПроцедуры

Процедура КоманднаяПанельТаблицаКолонки(Кнопка)
	
	Кнопка.Пометка = Не Кнопка.Пометка;
	ИзменитьСвернутостьПанелиКолонок(Кнопка.Пометка);
	
КонецПроцедуры

Процедура ПриЗакрытии()

	ИзменитьСвернутостьПанелиКолонок(Истина);
	
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЭтаФорма.Модифицированность Тогда
		Ответ = Вопрос("Данные в форме были изменены. Хотите сохранить изменения?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Ответ = КодВозвратаДиалога.Отмена Тогда
			Отказ = Истина;
			Возврат;
		ИначеЕсли Ответ = КодВозвратаДиалога.Да Тогда
			Модифицированность = Ложь;
			ОсновныеДействияФормыОК();
		КонецЕсли;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЯчейкаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ирНеглобальный.ПолеВводаРасширенногоЗначения_НачалоВыбораЛкс(ЭлементыФормы.ПолеТаблицы, СтандартнаяОбработка, , Истина);
	
КонецПроцедуры

Процедура ТаблицаКолонокТипЗначенияНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	//РезультатВыбора = ирНеглобальный.РедактироватьОписаниеТиповЛкс(Элемент);
	//Если РезультатВыбора <> Неопределено Тогда
	//	Элемент.Значение = РезультатВыбора;
	//КонецЕсли; 
	//СтандартнаяОбработка = Ложь;
	ирНеглобальный.ПолеВводаРасширенногоЗначения_НачалоВыбораЛкс(ЭлементыФормы.ТаблицаКолонок, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаОбновить(Кнопка)
	
	ОбновитьТаблицуКолонок();
	ОбновлениеОтображения();
	
КонецПроцедуры

Процедура ТаблицаКолонокПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.ТипЗначения = ЛксПолучитьОписаниеТиповВсеРедактируемыеТипы();
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаМенеджерТабличногоПоля(Кнопка)
	
	Обработки.ирМенеджерТабличногоПоля.ПолучитьФорму(, ЭтаФорма, ).УстановитьСвязь(ЭлементыФормы.ПолеТаблицы);
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаСохранитьВФайл(Кнопка)
	
	ирНеглобальный.СохранитьЗначениеВФайлЛкс(ПолучитьРезультат(), РасширениеФайла);
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаЗагрузитьИзФайла(Кнопка)
	
	Результат = ирНеглобальный.ЗагрузитьЗначениеИзФайлаЛкс(РасширениеФайла);
	Если Ложь
		Или ТипЗнч(Результат) = Тип("ТаблицаЗначений")
		Или ТипЗнч(Результат) = Тип("ДеревоЗначений")
	Тогда
		УстановитьРедактируемоеЗначение(Результат);
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаКонсольКомпоновки(Кнопка)
	
    Отчеты.ирКонсольКомпоновокДанных.Создать().ОткрытьПоТаблицеЗначений(ЭлементыФормы.ПолеТаблицы.Значение);
	
КонецПроцедуры

Процедура ТаблицаКолонокВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	ирНеглобальный.ЯчейкаТабличногоПоляРасширенногоЗначения_ВыборЛкс(Элемент, СтандартнаяОбработка);

КонецПроцедуры

Процедура КоманднаяПанельТаблицаКонсольОбработки(Кнопка)
	
	ирНеглобальный.ОткрытьОбъектыИзВыделенныхЯчеекВПодбореИОбработкеОбъектов(ЭтаФорма.ЭлементыФормы.ПолеТаблицы);
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаРедакторОбъектаБД(Кнопка)
	
	ирНеглобальный.ОткрытьСсылкуЯчейкиВРедактореОбъектаБДЛкс(ЭтаФорма.ЭлементыФормы.ПолеТаблицы);
	
КонецПроцедуры

Процедура КоманднаяПанельТаблицаЗаполнитьГруппуДублейДляЗамены(Кнопка)
	
	ЛксОткрытьФормуЗаменыСсылокИзТабличногоПоля(ЭтаФорма.ЭлементыФормы.ПолеТаблицы);
	
КонецПроцедуры

Процедура ОсновныеДействияФормыРедактироватьКопию(Кнопка)
	
	ирНеглобальный.ОткрытьФормуПроизвольногоЗначенияЛкс(ПолучитьРезультат().Скопировать());
	
КонецПроцедуры


Функция СформироватьимяКолонки(знач ИмяКолонки, ИДТекСтроки)
	НТЗ = ТаблицаКолонок;
	Флаг = Истина;
	Индекс = 0;
	
	ИмяКолонки = СокрЛП(ИмяКолонки);
	
	Пока Флаг Цикл
		Имя = ИмяКолонки + Строка(Формат(Индекс, "ЧН=-"));
		Имя = СтрЗаменить(Имя, "-", "");
		
		// Если нет строки с таким именем.
		Фильтр = Новый Структура("Имя", Имя);
		ОтфильтрованныеСтроки = НТЗ.НайтиСтроки(Фильтр);
		Если ОтфильтрованныеСтроки.Количество() = 0 Тогда
			Флаг = Ложь;
		Иначе
			Если ОтфильтрованныеСтроки.Получить(0) <> ИДТекСтроки Тогда 
				Флаг = Истина;
			Иначе
				Флаг = Ложь;
			КонецЕсли;	
		КонецЕсли;
		
		//// Если нет колонки с таким именем.
		//Колонки = Элементы.ТаблицаЗначенийПараметр.ПодчиненныеЭлементы;
		//КолКолонок = Колонки.Количество();
		//Для Индекс = 0 по КолКолонок - 1 Цикл 
		//	Если Колонки.Получить(Индекс).Имя = Имя Тогда 
		//		Флаг = Истина;
		//		Прервать;
		//	КонецЕсли;	
		//КонецЦикла;	
		
		ВозврЗнач = ?(Флаг, "", Имя);
		
		Индекс = Индекс + 1;
	КонецЦикла; 
	
	Возврат ВозврЗнач;
КонецФункции

Функция ЧС(Число)
	
	Возврат Формат(Число, "ЧН=; ЧВН=; ЧГ=0");
	
КонецФункции

Функция МакетВТаблицуЗначений(ИмяФайла) Экспорт
	
	Макет = Новый ТабличныйДокумент;
	Макет.Прочитать(ИмяФайла);
	ТЗ = Новый ТаблицаЗначений();
	Для Кол=1 По Макет.ШиринаТаблицы Цикл
		ТЗ.Колонки.Добавить("Колонка"+ЧС(Кол));
	КонецЦикла;
	Для Стр=1 По Макет.ВысотаТаблицы Цикл
		ТекСтр=ТЗ.Добавить();
		ПустаяСтрока=истина;
		Для Кол=1 По Макет.ШиринаТаблицы Цикл
			Яч=Макет.Область(Стр, Кол);
			Если Яч.СодержитЗначение Тогда
				Зн=Яч.Значение;
			Иначе
				Зн=СокрЛП(Яч.Текст);
			КонецЕсли;
			Если ТипЗнч(Зн)=Тип("Строка") И ПустаяСтрока(Зн) Тогда
				Зн=Неопределено;
			КонецЕсли;
			ТекСтр["Колонка"+ЧС(Кол)]=Зн;
		КонецЦикла;
	КонецЦикла;
	
	// Заполнение таблицы значений
	ЭлементыФормы.ПолеТаблицы.Значение.Очистить();
	Счетчик = 1;
	Для каждого Колонка из ТЗ.Колонки Цикл
		ИмяКолонки = "Колонка"+ЧС(Счетчик); 
		ИдентификаторСтроки = Новый УникальныйИдентификатор;
		ИмяКолонки = СформироватьИмяКолонки(ИмяКолонки, ИдентификаторСтроки);
		
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("Строка"));
		ТипЗначения = Новый ОписаниеТипов(МассивТипов);
		ЭлементНастройки = ТаблицаКолонок.Добавить();
		ЭлементНастройки.Имя = ИмяКолонки;
		ЭлементНастройки.ТипЗначения = ТипЗначения;
		//ИнициализацияКолонкиВТЗСервер("", ИмяКолонки, ТипЗначения);
		Счетчик = Счетчик + 1;
	КонецЦикла;
	ОбновитьКолонкиТаблицы();
	
	Для каждого СтрокаТЗ из ТЗ Цикл
		Счетчик = 1;
		ЭлементТЗ = ЭлементыФормы.ПолеТаблицы.Значение.Добавить();
		Для каждого Колонка из ТЗ.Колонки Цикл
			ИмяКолонки = "Колонка"+ЧС(Счетчик);
			ЭлементТЗ[ИмяКолонки]  = СтрокаТЗ[Колонка.Имя];
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТЗ;
	
КонецФункции    

Процедура КоманднаяПанельТаблицаЗагрузитьИзMXL(Кнопка)
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.ПолноеИмяФайла = "";
	ДиалогОткрытияФайла.Фильтр = ирНеглобальный.ПолучитьСтрокуФильтраДляВыбораФайлаЛкс("mxl", "Табличный документ");
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите табличный документ для загрузки";
	ИмяФайлаТабДок = "";
	Если ДиалогОткрытияФайла.Выбрать() Тогда
		МассивФайлов = ДиалогОткрытияФайла.ВыбранныеФайлы;
		Для Каждого ИмяФайла Из МассивФайлов Цикл
			ИмяФайлаТабДок = ИмяФайла;
		КонецЦикла;
		МакетВТаблицуЗначений(ИмяФайлаТабДок);
	//Иначе
	//	Предупреждение("Файл не выбран!");
	//	Возврат;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура СтруктураКоманднойПанелиНажатие(Кнопка)
	
	ирНеглобальный.ОткрытьСтруктуруКоманднойПанелиЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

ирНеглобальный.ВстроитьКнопкиСтруктурыКоманднойПанелиЛкс(ЭтаФорма);

РасширениеФайла = "VT_";
ТаблицаКолонок.Колонки.Добавить("ИмяСтаройКолонки", Новый ОписаниеТипов("Строка"));
ЭтоДерево = Ложь;