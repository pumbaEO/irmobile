////////////////////////////////////////////////////////////////////////////////
// Подсистема "Инструменты разработчика"
//
// Авторское право (с) 2007, Старых С.А.

#Если Не ТонкийКлиент И Не ВебКлиент Тогда

Функция Получить() Экспорт 
	
	// - АВВ [07.08.2012] {
	#Если НеМобильныйБлок Тогда
	//#Если Клиент Или ВнешнееСоединение Или Не Сервер Тогда
		Попытка
			ирПлатформа = Вычислить("ирПлатформа");
		Исключение
		КонецПопытки;
		Если ирПлатформа = Неопределено Тогда
			ирПлатформа = Обработки.ирПлатформа.Создать();
		КонецЕсли; 
		Возврат ирПлатформа;
	// В 8.3 это уже не работает. http://partners.v8.1c.ru/forum/thread.jsp?id=1058206#1058206
	//#Иначе
	//	ИмяПараметраСеанса = "ирКэш";
	//	Попытка
	//		НадоИнициализировать = ПараметрыСеанса[ИмяПараметраСеанса] = Неопределено;
	//	Исключение
	//		НадоИнициализировать = Истина;
	//	КонецПопытки;
	//	Если Не НадоИнициализировать Тогда
	//		Кэш = ПолучитьИзВременногоХранилища(ПараметрыСеанса[ИмяПараметраСеанса]);
	//	КонецЕсли; 
	//	Если ТипЗнч(Кэш) <> Тип("Структура") Тогда
	//		Кэш = Обработки.ирПлатформа.Создать();
	//		//ПараметрыСеанса[ИмяПараметраСеанса] = "1";
	//		ПараметрыСеанса[ИмяПараметраСеанса] = ПоместитьВоВременноеХранилище(Кэш, Новый УникальныйИдентификатор);
	//	КонецЕсли;
	//	Возврат Кэш;
	//#КонецЕсли 
	#КонецЕсли
	// - АВВ [07.08.2012] }

	// + АВВ [07.08.2012] 
	Возврат ирПлатформа;
	
КонецФункции // Получить()

Функция ПолучитьКомпоновщикТаблицыМетаданныхЛкс(ПолноеИмяМД) Экспорт
	
	// + АВВ [12.11.2012] { Эмулирую кэширование
	Если ирМобильные.ирКЭШ_КомпоновщикТаблицыМетаданных[ПолноеИмяМД] <> Неопределено Тогда
		Возврат ирМобильные.ирКЭШ_КомпоновщикТаблицыМетаданных[ПолноеИмяМД];		
	КонецЕсли; 
	// + АВВ [12.11.2012] } 
	СхемаКомпоновкиДанных = ирНеглобальный.ПолучитьСхемуКомпоновкиПоОбъектуМетаданныхЛкс(ПолноеИмяМД,, Ложь);
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновкиДанных));
	// + АВВ [12.11.2012] Запоминаем результат
	ирМобильные.ирКЭШ_КомпоновщикТаблицыМетаданных[ПолноеИмяМД] = КомпоновщикНастроек;	
	Возврат КомпоновщикНастроек;
	
КонецФункции

Функция ЛиНемобильныйРежимЛкс() Экспорт
	
	Попытка
		Пустышка = Вычислить("ЭтотОбъект");
		Результат = Ложь;
	Исключение
		Результат = Истина;
	КонецПопытки; 
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСтруктуруХраненияБДЛкс(ЛиИменаБД = Ложь) Экспорт
	
	// + АВВ [12.11.2012] { Эмулирую кэширование
	Если ирМобильные.ирКЭШ_СтруктураХраненияБД[ЛиИменаБД] <> Неопределено Тогда
		Возврат ирМобильные.ирКЭШ_СтруктураХраненияБД[ЛиИменаБД];		
	КонецЕсли; 
	// + АВВ [12.11.2012] } 
	
	Результат = ПолучитьСтруктуруХраненияБазыДанных(, ЛиИменаБД);
	Результат.Колонки.Добавить("КраткоеИмяТаблицыХранения", Новый ОписаниеТипов("Строка"));
	Для Каждого СтрокаТаблицы Из Результат Цикл
		СтрокаТаблицы.КраткоеИмяТаблицыХранения = НРег(ирГлобальный.ЛксПолучитьПоследнийФрагмент(СтрокаТаблицы.ИмяТаблицыХранения));
	КонецЦикла;
	Результат.Индексы.Добавить("КраткоеИмяТаблицыХранения");
	// + АВВ [12.11.2012] Запоминаем результат
	ирМобильные.ирКЭШ_СтруктураХраненияБД[ЛиИменаБД] = Результат;
	Возврат Результат;

КонецФункции

// Получить словарь метаданных состоящий из шаблонов имен таблиц
//
// Параметры:
//  ЛиИменаБД - Булево
//
// Возвращаемое значение:
//  Соответствие - словарь шаблонов имен метаданных. Ключ - наименование объекта
//                 метаданных, где его номер заменен на номер позиции этого
//                 числа в строке; Значение - количество чисел в строке
//
Функция ПолучитьСловарьШаблоновМетаданных(ЛиИменаБД = Ложь) Экспорт

	Перем ПозицияЧисла;
	Перем КоличествоСимволов;
	
	// + АВВ [12.11.2012] { Эмулирую кэширование	
	Если ирМобильные.ирКЭШ_СловарьШаблоновМетаданных[лиИменаБД] <> Неопределено Тогда		
		Возврат ирМобильные.ирКЭШ_СловарьШаблоновМетаданных[лиИменаБД];   		
	КонецЕсли; 
	// + АВВ [12.11.2012] } 
	
	// -+ АВВ [03.05.2013] СтруктураХраненияБД = ирКэш.ПолучитьСтруктуруХраненияБДЛкс(ЛиИменаБД);
	СтруктураХраненияБД = ЭтотОбъект.ПолучитьСтруктуруХраненияБДЛкс(ЛиИменаБД);

	// Создать словарь метаданных
	СловарьМетаданных = Новый Соответствие;
	// Обработать структуру базы
	Для Каждого СтрокаСтруктурыБазы Из СтруктураХраненияБД Цикл
		
		// Скопировать имя таблицы
		ИмяТаблицыХранения = Лев(СтрокаСтруктурыБазы.ИмяТаблицыХранения, СтрДлина(СтрокаСтруктурыБазы.ИмяТаблицыХранения));
		ШаблонИмениТаблицыХранения = "";
		КоличествоЧисел = 0;
		ПоследнееИмяШаблона = "";
		
		// Получить шаблон имени
		Пока ирНеглобальный.НайтиЧислоВСтрокеЛкс(ИмяТаблицыХранения, ПозицияЧисла, КоличествоСимволов) Цикл
			КоличествоЧисел = КоличествоЧисел + 1;
			ПоследнееИмяШаблона = Лев(ИмяТаблицыХранения, ПозицияЧисла - 1);
			ШаблонИмениТаблицыХранения = ШаблонИмениТаблицыХранения + ПоследнееИмяШаблона + XMLСтрока(КоличествоЧисел);
			ИмяТаблицыХранения = Прав(ИмяТаблицыХранения, СтрДлина(ИмяТаблицыХранения) - ПозицияЧисла - КоличествоСимволов + 1);
		КонецЦикла;
		
		ШаблонИмениТаблицыХранения = ШаблонИмениТаблицыХранения + ИмяТаблицыХранения;
		СловарьМетаданных.Вставить(ШаблонИмениТаблицыХранения, КоличествоЧисел);
		
		Если Не ЛиИменаБД Тогда
			// Сохранить шаблон дочерней таблицы независимо
			Если КоличествоЧисел > 1 Тогда
				Если Лев(ПоследнееИмяШаблона, 1) = "." Тогда
					ПоследнееИмяШаблона = Сред(ПоследнееИмяШаблона, 2);
				КонецЕсли; 
				СловарьМетаданных.Вставить(ПоследнееИмяШаблона + "1", 1);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	// Предобразовать соответствие в ТЗ и отсортировать ее по ключу в обратном порядке
	СловарьТаблица = Новый ТаблицаЗначений;
	СловарьТаблица.Колонки.Добавить("Ключ");
	СловарьТаблица.Колонки.Добавить("Значение");
	Для Каждого СтрокаСловаря Из СловарьМетаданных Цикл
		СтрокаТаблицыСловаря = СловарьТаблица.Добавить();
		СтрокаТаблицыСловаря.Ключ = НРег(СтрокаСловаря.Ключ);
		СтрокаТаблицыСловаря.Значение = СтрокаСловаря.Значение;
	КонецЦикла;
	СловарьТаблица.Сортировать("Ключ Убыв");
	// + АВВ [12.11.2012] Запоминаем результат
	ирМобильные.ирКЭШ_СловарьШаблоновМетаданных[ЛиИменаБД] = СловарьТаблица;
	Возврат СловарьТаблица;

КонецФункции

#Если Клиент Тогда
	
Функция ПолучитьАнализТехножурналаЛкс() Экспорт
	
	// - АВВ [06.11.2012] Результат = Обработки.ирАнализТехножурнала.Создать();
	// + АВВ [12.11.2012] { Эмулирую кэширование	 
	Если ирМобильные.ирКЭШ_ирАнализТехножурнала <> Неопределено Тогда
		Возврат ирМобильные.ирКЭШ_ирАнализТехножурнала;		
	КонецЕсли; 
	Результат = ирМобильные.ПодключитьВнешнююОбработку("ирАнализТехножурнала"); 
	ирМобильные.ирКЭШ_ирАнализТехножурнала = Результат;
	// + АВВ [12.11.2012] }	
	Возврат Результат;
	
КонецФункции

#КонецЕсли

#КонецЕсли

Функция ЭтоФайловаяБазаЛкс() Экспорт 

	ИмяКластераСерверов = НСтр(СтрокаСоединенияИнформационнойБазы(), "Srvr");
	ЭтоФайловаяБаза = ПустаяСтрока(ИмяКластераСерверов);
	Возврат ЭтоФайловаяБаза;

КонецФункции // ЭтоФайловаяБазаИис()

Функция ПолучитьСтрокуСоединенияСервераЛкс() Экспорт
	
	Результат = ирСервер.ПолучитьСтрокуСоединенияСервераЛкс();
	Возврат Результат;
	
КонецФункции

// + АВВ [23.03.2013] 
Процедура мирИнициализировать() Экспорт
	
	Если мирИнициализирована Тогда		
		Возврат;		
	КонецЕсли; 
	
	мирИнициализирована = Истина;
	
КонецПроцедуры