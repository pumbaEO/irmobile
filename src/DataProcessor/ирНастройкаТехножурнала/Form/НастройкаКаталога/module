Перем мТекущийНомерУзлаСобытия;
Перем мТекущийНомерУзлаСвойства;
Перем мДобавлениеНовыхАтрибутов;

// Окрыть форму редактирования условий
//
Процедура ОткрытьФормуРедактированияУсловий(ИмяФормы, Элемент, ТекущееСвойство = "")
	
	ФормаРедактированияУсловий = ОбработкаОбъект.ПолучитьФорму(ИмяФормы);
	Если Элемент.Имя = "ТабличноеПолеСписокСвойств" Тогда
		УзелСобытий = ПолучитьУзелСвойства(ТекущийЖурнал, Элемент.ТекущаяСтрока.НомерСвойства);
		ИмяСвойства = Элемент.ТекущаяСтрока.ИмяСвойства;
		Если УзелСобытий <> Неопределено Тогда
			УзелСобытий = УзелСобытий.ПервыйДочерний;
		КонецЕсли;
	Иначе
		УзелСобытий = ПолучитьУзелСобытия(ТекущийЖурнал, Элемент.ТекущаяСтрока.НомерСобытия);
	КонецЕсли;
	Если УзелСобытий <> Неопределено Тогда
		Если ИмяФормы = "УсловияЗаписиСобытия" Тогда
			ТабЗнач = ФормаРедактированияУсловий.ЭтаФорма.РедактированиеУсловийСобытия;
		Иначе 
			Если ИмяФормы = "УсловияЗаписиСвойства" Тогда
				ТабЗнач = ФормаРедактированияУсловий.ЭтаФорма.РедактированиеУсловийСвойства;
			КонецЕсли;
		КонецЕсли;
		УзелУсловий = УзелСобытий.ПервыйДочерний;                
		Пока УзелУсловий <> Неопределено Цикл
			СтрокаУсловия = ТабЗнач.Добавить();
			СтрокаУсловия.Сравнение = УзелУсловий.ИмяУзла;
			Для Каждого Атрибут Из УзелУсловий.Атрибуты Цикл
				Если Атрибут.ИмяУзла = "property" Тогда
					СтрокаУсловия.Свойство = Атрибут.ЗначениеУзла;
				КонецЕсли;
				Если Атрибут.ИмяУзла = "value" Тогда
					Попытка
						СтрокаУсловия.Значение = Атрибут.ЗначениеУзла;
					Исключение
						ТабЗнач.Колонки.Добавить("Значение", Новый ОписаниеТипов("Строка"), "Значение"); 
						СтрокаУсловия.Значение = Атрибут.ЗначениеУзла;
					КонецПопытки;;
				КонецЕсли;
			КонецЦикла;
			УзелУсловий = УзелУсловий.СледующийСоседний;
		КонецЦикла;
	КонецЕсли;
	
	ФормаРедактированияУсловий.ТекущееСвойство = ТекущееСвойство;
	Результат = ФормаРедактированияУсловий.ОткрытьМодально();
	
	Если Результат = "ОК" Тогда
		Если Элемент.Имя = "ТабличноеПолеСписокСобытий" Тогда
			ТабЗнач = ФормаРедактированияУсловий.ЭтаФорма.РедактированиеУсловийСобытия;
			УстановитьЭлементОтбораСобытий(ТабЗнач, мТекущийНомерУзлаСобытия, Элемент.ТекущаяСтрока);
		Иначе
			ТабЗнач = ФормаРедактированияУсловий.ЭтаФорма.РедактированиеУсловийСвойства;
			УзелСвойства = ДобавитьСвойствоВЖурнал(ФормаРедактированияУсловий.ВыборИмениСвойства);
			УзелEvent = Неопределено;
			Для Каждого Строка Из ТабЗнач Цикл
				Если УзелEvent = Неопределено Тогда
					ЭлементEvent = ДокументДОМ().СоздатьЭлемент("event");
					УзелEvent = УзелСвойства.ДобавитьДочерний(ЭлементEvent);
				КонецЕсли;
				ЭлементДОМ = ДокументДОМ().СоздатьЭлемент(Строка.Сравнение);
				ЭлементДОМ.УстановитьАтрибут("property", ЗаменитьСимвол(Строка.Свойство, "_", ":"));
				ЭлементДОМ.УстановитьАтрибут("value", Строка.Значение);
				УзелEvent.ДобавитьДочерний(ЭлементДОМ);
			КонецЦикла;
			Элемент.ТекущаяСтрока.ИмяСвойства = ЗаменитьСимвол(ФормаРедактированияУсловий.ВыборИмениСвойства, "_", ":");
			ТабличноеПолеСписокСвойствПриАктивизацииСтроки(Элемент);
		КонецЕсли;
		
	Иначе 
		Если Результат = "Отмена" ИЛИ Результат = Неопределено Тогда
			Если мДобавлениеНовыхАтрибутов Тогда
				Если Элемент.Имя = "ТабличноеПолеСписокСобытий" Тогда
					ТабличноеПолеСписокСобытий.Удалить(ТабличноеПолеСписокСобытий.Количество() - 1);
				Иначе
					ТабличноеПолеСписокСвойств.Удалить(ТабличноеПолеСписокСвойств.Количество() - 1);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	ОбновитьПометкиВПростомСпискеСобытий();
	
КонецПроцедуры

Процедура УстановитьЭлементОтбораСобытий(ТабЗнач, ТекущийНомерУзлаСобытия = 0, СтрокаТаблицыОтбораСобытий = Неопределено)
 
	УзелСобытий = ПолучитьУзелСобытия(ТекущийЖурнал, ТекущийНомерУзлаСобытия);
	
	Если УзелСобытий <> Неопределено Тогда
	
		УзелУсловий = УзелСобытий.ПервыйДочерний;                
		
		Для Инд = 1 По УзелСобытий.ДочерниеУзлы.Количество() Цикл
			
			УзелСобытий.УдалитьДочерний(УзелУсловий);
			УзелУсловий = УзелСобытий.ПервыйДочерний;                
			
		КонецЦикла;
		
	КонецЕсли;
	
	УзелEvent = Неопределено;
	Для Каждого Строка Из ТабЗнач Цикл
		
		ЭлементДОМ = ДокументДОМ().СоздатьЭлемент(Строка.Сравнение);
		ЗаменимПодчеркивание = Строка.Свойство;
		ЗаменимПодчеркивание = СтрЗаменить(ЗаменимПодчеркивание, "_", ":");
		ЭлементДОМ.УстановитьАтрибут("property", ЗаменимПодчеркивание);
		ЭлементДОМ.УстановитьАтрибут("value", Строка.Значение);
		
		// Изменим конфигурационный файл
		Если УзелСобытий <> Неопределено Тогда
			УзелСобытий.ДобавитьДочерний(ЭлементДОМ);
		Иначе
			ЭлементEvent = ДокументДОМ().СоздатьЭлемент("event");
			Если УзелEvent <> Неопределено Тогда
				УзелEvent.ДобавитьДочерний(ЭлементДОМ);
			Иначе
				УзелEvent = ПолучитьУзелЖурнала(ТекущийЖурнал).ДобавитьДочерний(ЭлементEvent);
				УзелEvent.ДобавитьДочерний(ЭлементДОМ);
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЦикла;
	
	Если СтрокаТаблицыОтбораСобытий = Неопределено Тогда
		СтрокаТаблицыОтбораСобытий = ТабличноеПолеСписокСобытий.Добавить();
		СтрокаТаблицыОтбораСобытий.НомерСобытия = ТабличноеПолеСписокСобытий.Количество();
		ЭлементыФормы.ТабличноеПолеСписокСобытий.ТекущаяСтрока = СтрокаТаблицыОтбораСобытий;
	КонецЕсли; 
	ОбновитьПредставлениеСобытияВСтрокеГруппыИли(СтрокаТаблицыОтбораСобытий);
	ТабличноеПолеСписокСобытийПриАктивизацииСтроки(ЭлементыФормы.ТабличноеПолеСписокСобытий);

КонецПроцедуры

Процедура ОбновитьПредставлениеСобытияВСтрокеГруппыИли(СтрокаТаблицыОтбораСобытий)

	УзелСобытий = ПолучитьСписокСобытийЖурнала(ТекущийЖурнал);
	СтрокаПредставления = ПолучитьПредставлениеЭлементаОтбораСобытий(УзелСобытий, ТабличноеПолеСписокСобытий.Индекс(СтрокаТаблицыОтбораСобытий));
	СтрокаТаблицыОтбораСобытий.Событие = СтрокаПредставления;

КонецПроцедуры


Функция ДобавитьСвойствоВЖурнал(лИмяСвойства)

	Если мТекущийНомерУзлаСвойства <> Неопределено Тогда
		УзелСвойства = ПолучитьУзелСвойства(ТекущийЖурнал, мТекущийНомерУзлаСвойства);
	КонецЕсли; 
				
	Если УзелСвойства <> Неопределено И УзелСвойства.ПервыйДочерний <> Неопределено Тогда
		УзелСвойства.УдалитьДочерний(УзелСвойства.ПервыйДочерний);
	КонецЕсли;
	
	Если УзелСвойства <> Неопределено Тогда
		УзелСвойства.Атрибуты.УдалитьИменованныйЭлемент("name");
		Атрибут = ДокументДОМ().СоздатьАтрибут("name");
		Атрибут.Значение = ЗаменитьСимвол(лИмяСвойства, "_", ":");
		УзелСвойства.Атрибуты.УстановитьИменованныйЭлемент(Атрибут);
	КонецЕсли;
	
	Если УзелСвойства = Неопределено Тогда
		ЭлементProperty = ДокументДОМ().СоздатьЭлемент("property");
		ЭлементProperty.УстановитьАтрибут("name", лИмяСвойства);
		УзелСвойства = ПолучитьУзелЖурнала(ТекущийЖурнал).ДобавитьДочерний(ЭлементProperty);
	КонецЕсли;

	Возврат УзелСвойства;

КонецФункции

// Инициализация событий
//
Процедура ИнициализацияСвойствИСобытий()
	
	мТекущийНомерУзлаСобытия = 0;
	мТекущийНомерУзлаСвойства = 0;
	Если ТекущийЖурнал = 0 Тогда
		Возврат;
	КонецЕсли; 
	УзелСобытий = ПолучитьСписокСобытийЖурнала(ТекущийЖурнал);
	
	ТабличноеПолеСписокСобытий.Очистить();
	Для ИндСоб = 0 По УзелСобытий.Количество() - 1 Цикл
		
		// Добавляем в таблицу свойства (property)
		Если Не ирНеглобальный.СтрокиРавныЛкс(УзелСобытий.Элемент(ИндСоб).РодительскийУзел.ИмяУзла, "log") Тогда
			СтрокаСвойства = ТабличноеПолеСписокСвойств.Добавить();
			Попытка
				СтрокаСвойства.ИмяСвойства = УзелСобытий.Элемент(ИндСоб).РодительскийУзел.Атрибуты.ПолучитьИменованныйЭлемент("name").Значение;
			Исключение
			КонецПопытки;
			СтрокаСвойства.НомерСвойства = ТабличноеПолеСписокСвойств.Количество();
			Продолжить;
		КонецЕсли;
		
		СтрокаПредставления = "";
		СтрокаСобытия = ТабличноеПолеСписокСобытий.Добавить();
		СтрокаСобытия.НомерСобытия = ТабличноеПолеСписокСобытий.Количество();
		СтрокаСобытия.Событие = ПолучитьПредставлениеЭлементаОтбораСобытий(УзелСобытий, ИндСоб);
	КонецЦикла;
	
	// Возможно есть свойства (property) без вложеных событий (event)
	// их тоже надо показать
	УзелСвойств = ПолучитьСписокСвойств(ТекущийЖурнал);
	
	ТабличноеПолеСписокСвойств.Очистить();
	Для ИндСв = 0 По УзелСвойств.Количество() - 1 Цикл
		
		// Закомментирвано 24.09.2012
		//// Без вложенных событий не нужны, пропускаем
		//Если УзелСвойств.Элемент(ИндСв).ПервыйДочерний <> Неопределено Тогда
		//	Продолжить;
		//КонецЕсли;
	
		СтрокаСвойств = ТабличноеПолеСписокСвойств.Добавить();
		
		Попытка
			СтрокаСвойств.ИмяСвойства = УзелСвойств.Элемент(ИндСв).Атрибуты.ПолучитьИменованныйЭлемент("name").Значение;
		Исключение
		КонецПопытки;
		СтрокаСвойств.НомерСвойства = ТабличноеПолеСписокСвойств.Количество();
		
	КонецЦикла;
	ПрочитатьНастройкиЖурнала(ТекущийЖурнал - 1, МестоположениеЖурнала, ВремяХраненияЖурнала);
	ОбновитьПометкиВПростомСпискеСобытий();
	
КонецПроцедуры

Процедура ОбновитьПометкиВПростомСпискеСобытий() Экспорт
	
	ПредставлениеСобытий = "";
	УзелСобытий = ПолучитьСписокСобытийЖурнала(ТекущийЖурнал);
	Для Каждого СтрокаСобытия Из События Цикл
		СтрокаСобытия.Пометка = Ложь;
	КонецЦикла; 
	Для ИндСоб = 0 По УзелСобытий.Количество() - 1 Цикл
		ИмяСобытия = ПолучитьИмяСобытияЭлементаОтбораСобытийНаРавенство(УзелСобытий, ИндСоб);
		Если ИмяСобытия <> Неопределено Тогда
			ЭлементСписка = События.Найти(ВРег(ИмяСобытия), "Имя");
			Если ЭлементСписка <> Неопределено Тогда
				ЭлементСписка.Пометка = Истина;
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	ОбновитьПредставлениеУсловия();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ, ВЫЗЫВАЕМЫЕ ИЗ ОБРАБОТЧИКОВ ЭЛЕМЕНТОВ ФОРМЫ

// Инициализация формы
//
Процедура ПриОткрытии()
	
	Если ЭтаФорма.ВладелецФормы <> Неопределено Тогда
		ЭтаФорма.ВладелецФормы.Панель.Доступность = Ложь;
	КонецЕсли; 
	Если ДобавлениеНового Тогда
		ДокументДОМ().ПервыйДочерний.ДобавитьДочерний(НовыйЖурнал());
		ТекущийЖурнал = ОбработкаОбъект.ПолучитьФорму("НастройкаТехножурнала").ЭтаФорма.ТабличноеПолеЖурналы.Количество() + 1;
		ДобавитьСвойствоВЖурнал("all");
	КонецЕсли;
	ИнициализацияСвойствИСобытий();
	Если ДобавлениеНового Тогда
		Если ТекущийЖурнал = 1 Тогда
			Если Не ЗначениеЗаполнено(МестоположениеЖурнала) Тогда
				МестоположениеЖурнала = ОсновнойКаталогЖурнала;
			КонецЕсли; 
		КонецЕсли; 
	КонецЕсли;
	ДоступностьСпециальныхОтборов = Не ирКэш.Получить().ЭтоФайловаяБаза;
	Кнопки = Новый Массив();
	Кнопки.Добавить(ЭлементыФормы.КП_ДетальныйФильтрСобытий.Кнопки.ТекущаяБаза);
	//Кнопки.Добавить(ЭлементыФормы.КП_ДетальныйФильтрСобытий.Кнопки.ТекущийПользователь);
	Кнопки.Добавить(ЭлементыФормы.КП_ДетальныйФильтрСобытий.Кнопки.ТекущийСеанс);
	Для Каждого Кнопка Из Кнопки Цикл
		Кнопка.Доступность = ДоступностьСпециальныхОтборов;
		Если Не ДоступностьСпециальныхОтборов Тогда
			Кнопка.Подсказка = "Недоступно в файловой СУБД";
			Кнопка.Пояснение = Кнопка.Подсказка;
		КонецЕсли; 
	КонецЦикла;
	ОбновитьОтборТаблицыСобытий();

КонецПроцедуры

// Закрытие формы с сохранением
//
Процедура КнопкаОКНажатие(Элемент)
	
	Если ТабличноеПолеСписокСобытий.Количество() = 0 Тогда
		Предупреждение("Необходимо выбрать хотя бы одно событие!");
		Возврат;
	КонецЕсли; 
	Если Не ЗначениеЗаполнено(МестоположениеЖурнала)  Тогда
		Предупреждение("Необходимо выбрать каталог файлов журнала!");
		Возврат;
	КонецЕсли; 
	ЭтаФорма.Закрыть("ОК");
	
КонецПроцедуры

// Выбор каталога размещения журнала
// 
Процедура МестоположениеЖурналаНачалоВыбора(Элемент, СтандартнаяОбработка)
	
	ирНеглобальный.ПолеФайловогоКаталога_НачалоВыбораЛкс(Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

Процедура МестоположениеЖурналаПриИзменении(Элемент)
	
	ирНеглобальный.ПолеВводаСИсториейВыбора_ПриИзмененииЛкс(Элемент, Метаданные().Имя);
	
КонецПроцедуры

Процедура МестоположениеЖурналаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)

	ирНеглобальный.ПолеВводаСИсториейВыбора_НачалоВыбораИзСпискаЛкс(Элемент, Метаданные().Имя);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЧНОГО ПОЛЯ

//
//
Процедура ТабличноеПолеСписокСобытийПриАктивизацииСтроки(Элемент)
	
	УсловияЗаписиСобытия.Очистить();
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мТекущийНомерУзлаСобытия = Элемент.ТекущаяСтрока.НомерСобытия;
	УзелСобытий = ПолучитьУзелСобытия(ТекущийЖурнал, мТекущийНомерУзлаСобытия);
	
	Если УзелСобытий = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелУсловий = УзелСобытий.ПервыйДочерний;
	Пока УзелУсловий <> Неопределено Цикл
		СтрокаУсловия = УсловияЗаписиСобытия.Добавить();
		СтрокаУсловия.Сравнение = ПолучитьСписокСравнения().НайтиПоЗначению(НРег(УзелУсловий.ИмяУзла));
		Для Каждого Атрибут Из УзелУсловий.Атрибуты Цикл
				
			Если Атрибут.ИмяУзла = "property" Тогда
					
				СтрокаУсловия.Свойство = Атрибут.ЗначениеУзла;
					
			КонецЕсли;
				
			Если Атрибут.ИмяУзла = "value" Тогда
					
				СтрокаУсловия.Значение = Атрибут.ЗначениеУзла;
					
			КонецЕсли;
			                         
		КонецЦикла;
		
		УзелУсловий = УзелУсловий.СледующийСоседний;
	КонецЦикла;
	
КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСобытийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	мДобавлениеНовыхАтрибутов = Ложь;
	ОткрытьФормуРедактированияУсловий("УсловияЗаписиСобытия", Элемент);

КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСобытийПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
	
	Если Копирование Тогда
		
		// Получим перед добавлением новой строки
		ТабЗнач = УсловияЗаписиСобытия;
		ПредставлениеСобытия = ЭлементыФормы.ТабличноеПолеСписокСобытий.ТекущаяСтрока.Событие;
		
		УзелЖурнала = ПолучитьУзелЖурнала(ТекущийЖурнал);
		// Добавим параметры события
		УзелEvent = Неопределено;
		Для Каждого Строка Из ТабЗнач Цикл
			
			Элемент = НайтиПоПредставлению(ПолучитьСписокСравнения(), Строка.Сравнение);
			Если ПустаяСтрока(Элемент) Тогда
				Продолжить;
			КонецЕсли;
			
			ЭлементДОМ = ДокументДОМ().СоздатьЭлемент(Элемент);
			ЗаменимПодчеркивание = Строка.Свойство;
			ЗаменимПодчеркивание_ = СтрЗаменить(ЗаменимПодчеркивание, "_", ":");
			ЭлементДОМ.УстановитьАтрибут("property", ЗаменимПодчеркивание_);
			ЭлементДОМ.УстановитьАтрибут("value", Строка.Значение);
			
			Если УзелEvent = Неопределено Тогда
				ЭлементEvent = ДокументДОМ().СоздатьЭлемент("event");
				УзелEvent = УзелЖурнала.ДобавитьДочерний(ЭлементEvent);
			КонецЕсли;
			УзелEvent.ДобавитьДочерний(ЭлементДОМ);
					
		КонецЦикла;
		
		НоваяСтрока = ТабличноеПолеСписокСобытий.Добавить();
		НоваяСтрока.НомерСобытия = ТабличноеПолеСписокСобытий.Количество();
		НоваяСтрока.Событие = ПредставлениеСобытия;
		
		ЭлементыФормы.ТабличноеПолеСписокСобытий.ТекущаяСтрока = НоваяСтрока;
		ТабличноеПолеСписокСобытийПриАктивизацииСтроки(ЭлементыФормы.ТабличноеПолеСписокСобытий);
		ОбновитьПометкиВПростомСпискеСобытий();
		
	Иначе
		
		мДобавлениеНовыхАтрибутов = Истина;
		
		Строка = ТабличноеПолеСписокСобытий.Добавить();
		Строка.НомерСобытия = ТабличноеПолеСписокСобытий.Количество();
		
		Элемент.ТекущаяСтрока = Строка;
		
		ОткрытьФормуРедактированияУсловий("УсловияЗаписиСобытия", Элемент);
		
	КонецЕсли;

КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСобытийПередУдалением(Элемент, Отказ)
	
	СтрокаЭлементаОтбора = Элемент.ТекущаяСтрока;
	УдалитьЭлементОтбораСобытий(СтрокаЭлементаОтбора);
	ОбновитьПредставлениеУсловия();
	
КонецПроцедуры

Процедура УдалитьЭлементОтбораСобытий(СтрокаЭлементаОтбора)
	
	Инд = ТабличноеПолеСписокСобытий.Индекс(СтрокаЭлементаОтбора) + 1;
	// Поменяем номера строк от удалямой до конца
	Для сч = Инд По ТабличноеПолеСписокСобытий.Количество() - 1 Цикл
		
		Строка = ТабличноеПолеСписокСобытий[сч];
		Строка.НомерСобытия = сч;
		
	КонецЦикла;
	
	УзелСобытий = ПолучитьУзелСобытия(ТекущийЖурнал, Инд);
	
	Если УзелСобытий <> Неопределено Тогда
		УзелСобытий.РодительскийУзел.УдалитьДочерний(УзелСобытий);
		ОбновитьПометкиВПростомСпискеСобытий();
	КонецЕсли;

КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСвойствПриАктивизацииСтроки(Элемент)
	
	СвойстваСобытия.Очистить();
	
	Если Элемент.ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	мТекущийНомерУзлаСвойства = Элемент.ТекущаяСтрока.НомерСвойства;
	УзелСвойств = ПолучитьУзелСвойства(ТекущийЖурнал, мТекущийНомерУзлаСвойства);
	
	Если УзелСвойств = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Только один элемент property, показывать больше ничего не надо
	Если УзелСвойств.ПервыйДочерний = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УзелУсловий = УзелСвойств.ПервыйДочерний.ПервыйДочерний;
	Пока УзелУсловий <> Неопределено Цикл
		СтрокаУсловия = СвойстваСобытия.Добавить();
		СтрокаУсловия.Сравнение = ПолучитьСписокСравнения().НайтиПоЗначению(НРег(УзелУсловий.ИмяУзла));
		Для Каждого Атрибут Из УзелУсловий.Атрибуты Цикл
				
			Если Атрибут.ИмяУзла = "property" Тогда
					
				СтрокаУсловия.Свойство = Атрибут.ЗначениеУзла;
					
			КонецЕсли;
				
			Если Атрибут.ИмяУзла = "value" Тогда
					
				СтрокаУсловия.Значение = Атрибут.ЗначениеУзла;
					
			КонецЕсли;
			                         
		КонецЦикла;
		
		УзелУсловий = УзелУсловий.СледующийСоседний;
	КонецЦикла;
	
КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСвойствПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;
	мДобавлениеНовыхАтрибутов = Ложь;
	ОткрытьФормуРедактированияУсловий("УсловияЗаписиСвойства", Элемент);

КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСвойствПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Отказ = Истина;
		
	Если Копирование Тогда
		
		// Получим перед добавлением новой строки
		ИмяСвойства = ЭлементыФормы.ТабличноеПолеСписокСвойств.ТекущаяСтрока.ИмяСвойства;
		ТабЗнач = СвойстваСобытия;
		
		// Добавим свойство
		УзелЖурнала = ПолучитьУзелЖурнала(ТекущийЖурнал);
		ЭлементProperty = ДокументДОМ().СоздатьЭлемент("property");
		ЭлементProperty.УстановитьАтрибут("name", ИмяСвойства);
		УзелСвойства = УзелЖурнала.ДобавитьДочерний(ЭлементProperty);
		
		УзелEvent = Неопределено;
		// Добавим параметры свойства
		Для Каждого Строка Из ТабЗнач Цикл
			
			Элемент = НайтиПоПредставлению(ПолучитьСписокСравнения(), Строка.Сравнение);
			Если ПустаяСтрока(Элемент) Тогда
				Продолжить;
			КонецЕсли;
			
			ЭлементДОМ = ДокументДОМ().СоздатьЭлемент(Элемент);
			ЗаменимПодчеркивание = Строка.Свойство;
			ЗаменимПодчеркивание_ = СтрЗаменить(ЗаменимПодчеркивание, "_", ":");
			ЭлементДОМ.УстановитьАтрибут("property", ЗаменимПодчеркивание_);
			ЭлементДОМ.УстановитьАтрибут("value", Строка.Значение);
			
			Если УзелEvent = Неопределено Тогда
				ЭлементEvent = ДокументДОМ().СоздатьЭлемент("event");
				УзелEvent = УзелСвойства.ДобавитьДочерний(ЭлементEvent);
			КонецЕсли;
			УзелEvent.ДобавитьДочерний(ЭлементДОМ);
					
		КонецЦикла;
		
		НоваяСтрока = ТабличноеПолеСписокСвойств.Добавить();
		НоваяСтрока.НомерСвойства = ТабличноеПолеСписокСвойств.Количество();
		НоваяСтрока.ИмяСвойства = ИмяСвойства;
		
		ЭлементыФормы.ТабличноеПолеСписокСвойств.ТекущаяСтрока = НоваяСтрока;
		ТабличноеПолеСписокСвойствПриАктивизацииСтроки(ЭлементыФормы.ТабличноеПолеСписокСвойств);
		ОбновитьПредставлениеУсловия();
		
	Иначе
		
		мДобавлениеНовыхАтрибутов = Истина;
		
		Строка = ТабличноеПолеСписокСвойств.Добавить();
		Строка.НомерСвойства = ТабличноеПолеСписокСвойств.Количество();
			
		Элемент.ТекущаяСтрока = Строка;
		
		ОткрытьФормуРедактированияУсловий("УсловияЗаписиСвойства", Элемент);
		
	КонецЕсли;
	
КонецПроцедуры

//
//
Процедура ТабличноеПолеСписокСвойствПередУдалением(Элемент, Отказ)
	
	Инд = ТабличноеПолеСписокСвойств.Индекс(Элемент.ТекущаяСтрока) + 1;
	УзелСвойства = ПолучитьУзелСвойства(ТекущийЖурнал, Инд);
	
	// Поменяем номера строк от удалямой до конца
	Для сч = Инд По ТабличноеПолеСписокСвойств.Количество() - 1 Цикл
		
		Строка = ТабличноеПолеСписокСвойств[сч];
		Строка.НомерСвойства = сч;
		
	КонецЦикла;
	
	Если УзелСвойства <> Неопределено Тогда
		УзелСвойства.РодительскийУзел.УдалитьДочерний(УзелСвойства);
	КонецЕсли;
	ОбновитьПредставлениеУсловия();
	
КонецПроцедуры

Процедура МестоположениеЖурналаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЗапуститьПриложение(Элемент.Значение);
	
КонецПроцедуры

Процедура МестоположениеЖурналаОчистка(Элемент, СтандартнаяОбработка)

	СтандартнаяОбработка = Ложь;
	Элемент.Значение = ОсновнойКаталогЖурнала;
	
КонецПроцедуры

Процедура ПриЗакрытии()
	
	Если ДокументДОМ() = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ЗаписатьНастройкиЖурнала(ТекущийЖурнал, МестоположениеЖурнала, ВремяХраненияЖурнала);
	// Антибаг 8.2.16 http://partners.v8.1c.ru/forum/thread.jsp?id=1039155#1039155
	//ОсновнаяФорма = ОбработкаОбъект.ПолучитьФорму("НастройкаТехножурнала"); // Так в управляемом режиме получается новая форма вместо открытой
	ОсновнаяФорма = ЭтаФорма.ВладелецФормы;
	Если ОсновнаяФорма = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ПрочитатьНастройкиЖурналов(ОсновнаяФорма.ТабличноеПолеЖурналы);
	Если ПустаяСтрока(ПредставлениеУсловия) Тогда
		ТаблицаСпискаЖурналов = ОсновнаяФорма.ТабличноеПолеЖурналы;
		СтрокиПустогоУсловия = ТаблицаСпискаЖурналов.НайтиСтроки(Новый Структура("События", ""));
		ДокументДОМ = ДокументДОМ();
		Для Каждого СтрокаПустогоУсловия Из СтрокиПустогоУсловия Цикл
			Инд = ТаблицаСпискаЖурналов.Индекс(СтрокаПустогоУсловия) + 1;
			УзелЖурнала = ПолучитьУзелЖурнала(Инд);
			Если УзелЖурнала <> Неопределено Тогда
				УзелКонфигурации = ДокументДОМ.ПервыйДочерний;
				УзелКонфигурации.УдалитьДочерний(УзелЖурнала);
			КонецЕсли;
			ТаблицаСпискаЖурналов.Удалить(СтрокаПустогоУсловия);
		КонецЦикла;
	Иначе
		//ОсновнаяФорма.ВычислитьРазмерыКаталогов(); // Может долго выполняться
		ОсновнаяФорма.Модифицированность = ОсновнаяФорма.Модифицированность Или ЭтаФорма.Модифицированность;
	КонецЕсли;
	Если ЭтаФорма.ВладелецФормы <> Неопределено Тогда
		ЭтаФорма.ВладелецФормы.Панель.Доступность = Истина;
	КонецЕсли; 

КонецПроцедуры

Процедура СобытияПриИзмененииФлажка(Элемент, Колонка)
	
	ПредставлениеСобытий = "";
	УзелСобытий = ПолучитьСписокСобытийЖурнала(ТекущийЖурнал);
	НовоеСостояние = Элемент.ТекущаяСтрока.Пометка = Истина;
	ИмяСобытия = Элемент.ТекущаяСтрока.Имя;
	УзелУсловийНайден = Ложь;
	Для ИндСоб = 0 По УзелСобытий.Количество() - 1 Цикл
		УзелУсловий = УзелСобытий.Элемент(ИндСоб).ПервыйДочерний;
		Пока УзелУсловий <> Неопределено Цикл
			Если ВРег(ИмяСобытия) = "<ALL>" Тогда
				Если УзелУсловий.ИмяУзла = "ne" Тогда
					АтрибутИмениСобытия = УзелУсловий.Атрибуты.ПолучитьИменованныйЭлемент("property");
					Если Истина
						И АтрибутИмениСобытия <> Неопределено 
						И НРег(АтрибутИмениСобытия.ЗначениеУзла) = "name"
					Тогда
						АтрибутЗначенияИмениСобытия = УзелУсловий.Атрибуты.ПолучитьИменованныйЭлемент("value");
						Если Истина
							И АтрибутЗначенияИмениСобытия <> Неопределено
							И АтрибутЗначенияИмениСобытия.ЗначениеУзла = ""
						Тогда
							УзелУсловийНайден = Истина;
							Прервать;
						КонецЕсли; 
					КонецЕсли; 
				КонецЕсли; 
			Иначе
				Если УзелУсловий.ИмяУзла = "eq" Тогда
					АтрибутИмениСобытия = УзелУсловий.Атрибуты.ПолучитьИменованныйЭлемент("property");
					Если Истина
						И АтрибутИмениСобытия <> Неопределено 
						И НРег(АтрибутИмениСобытия.ЗначениеУзла) = "name"
					Тогда
						АтрибутЗначенияИмениСобытия = УзелУсловий.Атрибуты.ПолучитьИменованныйЭлемент("value");
						Если Истина
							И АтрибутЗначенияИмениСобытия <> Неопределено
							И НРег(АтрибутЗначенияИмениСобытия.ЗначениеУзла) = НРег(ИмяСобытия)
						Тогда
							УзелУсловийНайден = Истина;
							Прервать;
						КонецЕсли; 
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 
			УзелУсловий = УзелУсловий.СледующийСоседний;
		КонецЦикла;
		Если УзелУсловийНайден Тогда
			Прервать;
		КонецЕсли; 
	КонецЦикла;
	Если УзелУсловийНайден И Не НовоеСостояние Тогда
		//УзелУсловий.РодительскийУзел.УдалитьДочерний(УзелУсловий);
		УдалитьЭлементОтбораСобытий(ТабличноеПолеСписокСобытий[ИндСоб]);
		ТабличноеПолеСписокСобытий.Удалить(ТабличноеПолеСписокСобытий[ИндСоб]);
	ИначеЕсли Не УзелУсловийНайден И НовоеСостояние Тогда
		ТаблицаЭлементаОтбора = ПолучитьФорму("УсловияЗаписиСобытия").РедактированиеУсловийСобытия.СкопироватьКолонки();
		ЭлементЭлементаОтбора = ТаблицаЭлементаОтбора.Добавить();
		ЭлементЭлементаОтбора.Свойство = "name";
		Если ВРег(ИмяСобытия) = "<ALL>" Тогда
			ЭлементЭлементаОтбора.Сравнение = "ne";
			ЭлементЭлементаОтбора.Значение = "";
		Иначе
			ЭлементЭлементаОтбора.Сравнение = "eq";
			ЭлементЭлементаОтбора.Значение = ИмяСобытия;
		КонецЕсли; 
		УстановитьЭлементОтбораСобытий(ТаблицаЭлементаОтбора);
	КонецЕсли;
	ОбновитьПредставлениеУсловия();

КонецПроцедуры

Процедура ОбновитьПредставлениеУсловия() 

	ЭтаФорма.ПредставлениеУсловия = ПолучитьПредставлениеУсловияЖурнала(ТекущийЖурнал - 1);

КонецПроцедуры

Процедура КоманднаяПанельСобытияТолькоПомеченные(Кнопка)
	
	ЛиТолькоПомеченныеСобытия = Не Кнопка.Пометка;
	ОбновитьОтборТаблицыСобытий();
	
КонецПроцедуры

Процедура УстановитьТекущуюСтрокуСобытия(Событие) Экспорт
	
	ЛиТолькоПомеченныеСобытия = Ложь;
	ОбновитьОтборТаблицыСобытий();
	ЭлементыФормы.События.ОтборСтрок.Сбросить();
	СтрокаСобытия = События.Найти(ВРег(Событие), "Имя");
	Если СтрокаСобытия <> Неопределено Тогда
		ЭлементыФормы.События.ТекущаяСтрока = СтрокаСобытия;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ОбновитьОтборТаблицыСобытий()
	
	Если События.Найти(Истина, "Пометка") = Неопределено Тогда
		ЛиТолькоПомеченныеСобытия = Ложь;
	КонецЕсли; 
	ЭлементыФормы.События.ОтборСтрок.Пометка.Использование = ЛиТолькоПомеченныеСобытия;
	ЭлементыФормы.КоманднаяПанельСобытия.Кнопки.ТолькоПомеченные.Пометка = ЛиТолькоПомеченныеСобытия;
	
КонецПроцедуры

Процедура ОбновитьОписаниеСвойстваОтбораСобытия()
	
	СтрокаСвойства = Свойства.Найти(ЭлементыФормы.УсловияЗаписиСобытия.ТекущаяСтрока.Свойство, "Имя");
	Если СтрокаСвойства <> Неопределено Тогда
		ОписаниеСвойстваОтбораСобытия = СтрокаСвойства.Описание;
	Иначе
		ОписаниеСвойстваОтбораСобытия = "Описание отсутствует";
	КонецЕсли; 

КонецПроцедуры

Процедура УсловияЗаписиСобытияПриАктивизацииСтроки(Элемент)
	
	ОбновитьОписаниеСвойстваОтбораСобытия();

КонецПроцедуры

Процедура УсловияЗаписиСобытияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	мДобавлениеНовыхАтрибутов = Ложь;
	ОткрытьФормуРедактированияУсловий("УсловияЗаписиСобытия", ЭлементыФормы.ТабличноеПолеСписокСобытий, ВыбраннаяСтрока.Свойство);
	
КонецПроцедуры

Процедура СвойстваСобытияВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	мДобавлениеНовыхАтрибутов = Ложь;
	ОткрытьФормуРедактированияУсловий("УсловияЗаписиСвойства", ЭлементыФормы.ТабличноеПолеСписокСвойств, ВыбраннаяСтрока.Свойство);
	
КонецПроцедуры

Процедура УстановитьЭлементОтбораВВыделенныхГруппахИ(Свойство, ЗначениеСвойства, Сравнение = "eq", СтрокиГрупп = Неопределено)
	
	Если СтрокиГрупп = Неопределено Тогда
		Массив = ЭлементыФормы.ТабличноеПолеСписокСобытий.ВыделенныеСтроки;
	ИначеЕсли ТипЗнч(СтрокиГрупп) = Тип("СтрокаТаблицыЗначений") Тогда
		Массив = Новый Массив();
		Массив.Добавить(СтрокиГрупп);
	Иначе
		Массив = СтрокиГрупп;
	КонецЕсли; 
	УзелСобытий = ПолучитьСписокСобытийЖурнала(ТекущийЖурнал);
	СтруктураАтрибутов = Новый Структура("property, value", НРег(Свойство), ЗначениеСвойства);
	Для Каждого СтрокаГруппыИли Из Массив Цикл
		УзелГруппыИ = УзелСобытий.Элемент(ТабличноеПолеСписокСобытий.Индекс(СтрокаГруппыИли));
		УзелУсловия = УзелГруппыИ.ПервыйДочерний;
		Пока УзелУсловия <> Неопределено Цикл
			Если УзелУсловия.ИмяУзла = "eq" Тогда
				АтрибутИмениСобытия = УзелУсловия.Атрибуты.ПолучитьИменованныйЭлемент("property");
				Если Истина
					И АтрибутИмениСобытия <> Неопределено 
					И НРег(АтрибутИмениСобытия.ЗначениеУзла) = НРег(Свойство)
				Тогда
					Прервать;
				КонецЕсли; 
			КонецЕсли; 
			УзелУсловия = УзелУсловия.СледующийСоседний;
		КонецЦикла;
		Если УзелУсловия = Неопределено Тогда
			НайтиДобавитьУзелСАтрибутами(Ложь, , УзелГруппыИ, "eq", СтруктураАтрибутов);
		Иначе
			Для каждого Атрибут Из СтруктураАтрибутов Цикл
				УзелУсловия.УстановитьАтрибут(Атрибут.Ключ, XMLСтрока(Атрибут.Значение));
			КонецЦикла;
		КонецЕсли; 
		ОбновитьПредставлениеСобытияВСтрокеГруппыИли(СтрокаГруппыИли);
	КонецЦикла;
	ОбновитьПредставлениеУсловия();
	ТабличноеПолеСписокСобытийПриАктивизацииСтроки(ЭлементыФормы.ТабличноеПолеСписокСобытий);
	
КонецПроцедуры

Процедура КП_ДетальныйФильтрСобытийТекущийСеанс(Кнопка = Неопределено) Экспорт
	
	УстановитьЭлементОтбораВВыделенныхГруппахИ("sessionID", НомерСеансаИнформационнойБазы());
	
КонецПроцедуры

Процедура КП_ДетальныйФильтрСобытийТекущийПользователь(Кнопка = Неопределено) Экспорт
	
	УстановитьЭлементОтбораВВыделенныхГруппахИ("usr", ИмяПользователя());
	
КонецПроцедуры

Процедура КП_ДетальныйФильтрСобытийТекущаяБаза(Кнопка = Неопределено) Экспорт
	
	ИмяБазы = НСтр(СтрокаСоединенияИнформационнойБазы(), "Ref");
	УстановитьЭлементОтбораВВыделенныхГруппахИ("p:processname", ИмяБазы);
	
КонецПроцедуры

Процедура ТабличноеПолеСписокСобытийПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если ПараметрыПеретаскивания <> Неопределено Тогда
		ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.КопированиеИПеремещение;
		СтандартнаяОбработка = Ложь;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ТабличноеПолеСписокСобытийПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Колонка)
	
	Если Строка <> Неопределено Тогда
		ЗначениеПеретаскивания = ПараметрыПеретаскивания.Значение;
		Если ЗначениеПеретаскивания <> Неопределено Тогда
			Если ТипЗнч(ЗначениеПеретаскивания) <> Тип("Массив") Тогда
				Массив = Новый Массив();
				Массив.Добавить(ЗначениеПеретаскивания);
			Иначе
				Массив = ЗначениеПеретаскивания;
			КонецЕсли; 
			Для Каждого ЭлементМассива Из Массив Цикл
				Если НРег(ЭлементМассива.Свойство) = "name" Тогда
					Продолжить;
				КонецЕсли; 
				УстановитьЭлементОтбораВВыделенныхГруппахИ(ЭлементМассива.Свойство, ЭлементМассива.Значение, ЭлементМассива.Сравнение, Строка);
			КонецЦикла; 
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

ЗаполнитьСписокВыбораСрокаХранения(ЭлементыФормы.ВремяХраненияЖурнала.СписокВыбора);
ЭлементыФормы.События.ОтборСтрок.Пометка.Значение = Истина;