////////////////////////////////////////////////////////////////////////////////
// Переменные
//

// Соответствие по ключу идентификатор регламентного задания
Перем РегламентныеЗаданияСоответствие;
// Соответствие по ключу идентификатор фонового задания
Перем ФоновыеЗаданияСоответствие;
// Признак блокировки обновления фоновых и регламентных заданий при открытии модальных диалогов
Перем БлокироватьОбновление;

////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции
//

Функция ПолучитьДлительностьВыполнения(ФоновоеЗадание)
	#Если _ Тогда
		ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору();
	#КонецЕсли
	Если Не ЗначениеЗаполнено(ФоновоеЗадание.Конец) Тогда
		Длительность = ТекущаяДата() - ФоновоеЗадание.Начало;
	Иначе
		Длительность = ФоновоеЗадание.Конец - ФоновоеЗадание.Начало;
	КонецЕсли; 
	Возврат Длительность;
	
КонецФункции

// Обновить список регламентных заданий
//
Процедура ОбновитьСписокРегламентныхЗаданий()
	Перем ТекущийИдентификатор;
	
	Если БлокироватьОбновление Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ЭлементыФормы.СписокРегламентныхЗаданий.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущийИдентификатор = ТекущаяСтрока.Идентификатор;
	КонецЕсли;
	
	Идентификаторы = Новый Массив;
	
	ВыделенныеСтроки = ЭлементыФормы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		Идентификаторы.Добавить(ВыделеннаяСтрока.Идентификатор);
	КонецЦикла;
	
	СписокРегламентныхЗаданий.Очистить();
	
	Отбор = Неопределено;
	Если ОтборРегламентныхЗаданийВключен = Истина Тогда
		Отбор = ОтборРегламентныхЗаданий;
	КонецЕсли;
	ЭлементыФормы.КоманднаяПанельРегламентныеЗадания.Кнопки.ОтключитьОтбор.Доступность = (ОтборРегламентныхЗаданийВключен = Истина);
	Регламентные = РегламентныеЗадания.ПолучитьРегламентныеЗадания(Отбор);
	РегламентныеЗаданияСоответствие.Очистить();
	
	Для Каждого Регламентное из Регламентные Цикл
		НоваяСтрока = СписокРегламентныхЗаданий.Добавить();
		НоваяСтрока.Метаданные = Регламентное.Метаданные.Представление();
		НоваяСтрока.Наименование = Регламентное.Наименование;
		НоваяСтрока.Ключ = Регламентное.Ключ;
		НоваяСтрока.Расписание = Регламентное.Расписание;
		НоваяСтрока.Пользователь = Регламентное.ИмяПользователя;
		НоваяСтрока.Предопределенное = Регламентное.Предопределенное;
		НоваяСтрока.Использование = Регламентное.Использование;
		НоваяСтрока.Идентификатор = Регламентное.УникальныйИдентификатор;
		
		РегламентныеЗаданияСоответствие[Строка(Регламентное.УникальныйИдентификатор)] = Регламентное;
		
		ПоследнееЗадание = ПолучитьПоследнееЗаданиеРегламентногоЗадания(Регламентное);
		Если ПоследнееЗадание <> Неопределено Тогда
			НоваяСтрока.Выполнялось = ПоследнееЗадание.Начало;
			НоваяСтрока.Состояние = ПоследнееЗадание.Состояние;
			НоваяСтрока.СостояниеЗадания = ПоследнееЗадание.Состояние;
			НоваяСтрока.Длительность = ПолучитьДлительностьВыполнения(ПоследнееЗадание);
		КонецЕсли;
	КонецЦикла;
	РазмерСпискаРегламентныхЗаданий = СписокРегламентныхЗаданий.Количество();
	
    Если ТекущийИдентификатор <> Неопределено Тогда
		Строка = СписокРегламентныхЗаданий.Найти(ТекущийИдентификатор, "Идентификатор");
		Если Строка <> Неопределено Тогда
			ЭлементыФормы.СписокРегламентныхЗаданий.ТекущаяСтрока = Строка;
		КонецЕсли;
	КонецЕсли;

	Если Идентификаторы.Количество() > 0 Тогда
		ВыделенныеСтроки.Очистить();
	КонецЕсли;
	
	Для Каждого Идентификатор из Идентификаторы Цикл
		Строка = СписокРегламентныхЗаданий.Найти(Идентификатор, "Идентификатор");
		Если Строка <> Неопределено Тогда
			ВыделенныеСтроки.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Обновить список фоновых заданий
//
Процедура ОбновитьСписокФоновыхЗаданий()
	Перем ТекущийИдентификатор;
	
	Если БлокироватьОбновление Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = ЭлементыФормы.СписокФоновыхЗаданий.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		ТекущийИдентификатор = ТекущаяСтрока.Идентификатор;
	КонецЕсли;
	
	Идентификаторы = Новый Массив;
	
	ВыделенныеСтроки = ЭлементыФормы.СписокФоновыхЗаданий.ВыделенныеСтроки;
	Для Каждого ВыделеннаяСтрока из ВыделенныеСтроки Цикл
		Идентификаторы.Добавить(ВыделеннаяСтрока.Идентификатор);
	КонецЦикла;
	
	СписокФоновыхЗаданий.Очистить();
	
	Отбор = Неопределено;
	Если ОтборФоновыхЗаданийВключен = Истина Тогда
		Отбор = ОтборФоновыхЗаданий;
	КонецЕсли;
	ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.ОтключитьОтбор.Доступность = (ОтборФоновыхЗаданийВключен = Истина);
		
	Если Не ирКэш.Получить().ЭтоФайловаяБаза Тогда
		Фоновые = ФоновыеЗадания.ПолучитьФоновыеЗадания(Отбор);
	Иначе
		Фоновые = Новый Массив;
	КонецЕсли; 
	ФоновыеЗаданияСоответствие.Очистить();
	
	Для Каждого Фоновое из Фоновые Цикл
		Длительность = ПолучитьДлительностьВыполнения(Фоновое);
		Если Истина
			И Отбор <> Неопределено
			И Отбор.Свойство("ДлительностьМин") 
		Тогда
			Если Ложь
				Или Отбор.ДлительностьМин > Длительность
				Или (Истина
					И Отбор.ДлительностьМакс > 0
					И Отбор.ДлительностьМакс < Длительность)
			Тогда
				Продолжить;
			КонецЕсли; 
		КонецЕсли; 
		
		НоваяСтрока = СписокФоновыхЗаданий.Добавить();
		
		РегламентноеЗадание = Фоновое.РегламентноеЗадание;
		Если РегламентноеЗадание <> Неопределено Тогда
			Строка = РегламентноеЗадание.Метаданные.Представление();
			Если РегламентноеЗадание.Наименование <> "" Тогда
				Строка = Строка + ":" + РегламентноеЗадание.Наименование;
			КонецЕсли;
			
			НоваяСтрока.Регламентное = Строка;
		КонецЕсли;
			
		НоваяСтрока.Наименование = Фоновое.Наименование;
		НоваяСтрока.Ключ = Фоновое.Ключ;
		НоваяСтрока.Метод = Фоновое.ИмяМетода;
		НоваяСтрока.Состояние = Фоновое.Состояние;
		НоваяСтрока.Начало = Фоновое.Начало;
		НоваяСтрока.Конец = Фоновое.Конец;
		НоваяСтрока.Длительность = Длительность;
		НоваяСтрока.Сервер = Фоновое.Расположение;
		
		Если Фоновое.ИнформацияОбОшибке <> Неопределено Тогда
			НоваяСтрока.Ошибки = ПодробноеПредставлениеОшибки(Фоновое.ИнформацияОбОшибке);
		КонецЕсли;
		
		Если ПолучатьСообщенияПользователю Тогда
			МассивСообщений = Фоновое.ПолучитьСообщенияПользователю();
			Если МассивСообщений <> Неопределено Тогда
				НоваяСтрока.СообщенияПользователю = МассивСообщений.Количество();
			КонецЕсли; 
		КонецЕсли; 
		НоваяСтрока.Идентификатор = Фоновое.УникальныйИдентификатор;
		НоваяСтрока.СостояниеЗадания = Фоновое.Состояние;
		
		ФоновыеЗаданияСоответствие[Строка(Фоновое.УникальныйИдентификатор)] = Фоновое;
	КонецЦикла;
	РазмерСпискаФоновыхЗаданий = СписокФоновыхЗаданий.Количество();
	
	Если ТекущийИдентификатор <> Неопределено Тогда
		Строка = СписокФоновыхЗаданий.Найти(ТекущийИдентификатор, "Идентификатор");
		Если Строка <> Неопределено Тогда
			ЭлементыФормы.СписокФоновыхЗаданий.ТекущаяСтрока = Строка;
		КонецЕсли;
	КонецЕсли;
	
	Если Идентификаторы.Количество() > 0 Тогда
		ВыделенныеСтроки.Очистить();
	КонецЕсли;
		
	Для Каждого Идентификатор из Идентификаторы Цикл
		Строка = СписокФоновыхЗаданий.Найти(Идентификатор, "Идентификатор");
		Если Строка <> Неопределено Тогда
			ВыделенныеСтроки.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПреобразоватьОтборДляСохраненияЗначения(СтарыйОтбор)
	
	Если СтарыйОтбор = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НовыйОтбор = Новый Структура;
	Для Каждого Свойство Из СтарыйОтбор Цикл
		НовыйОтбор.Вставить(Свойство.Ключ, ?(Свойство.Ключ = "Метаданные", Свойство.Значение.Имя, Свойство.Значение));
	КонецЦикла;
	
	Возврат НовыйОтбор;
	
КонецФункции

Функция ПреобразоватьОтборПослеВосстановленияЗначений(СтарыйОтбор)
	
	Если СтарыйОтбор = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	НовыйОтбор = Новый Структура;
	Для Каждого Свойство Из СтарыйОтбор Цикл
		Если (Свойство.Ключ = "Метаданные") И (ТипЗнч(Свойство.Значение) = Тип("Строка")) Тогда
			НовыйОтбор.Вставить(Свойство.Ключ, Метаданные.РегламентныеЗадания[Свойство.Значение]);
		Иначе
			НовыйОтбор.Вставить(Свойство.Ключ, Свойство.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат НовыйОтбор;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ
//

Процедура ОбновитьРегламентныеНажатие(Кнопка)
	
	Попытка
		ОбновитьСписокРегламентныхЗаданий();
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

Процедура РасписаниеНажатие(Кнопка)
	
	ВыделенныеСтроки = ЭлементыФормы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() > 0 Тогда
		
		БлокироватьОбновление = Истина;
		
		Строка = ВыделенныеСтроки.Получить(0);
		РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(Строка.Идентификатор);
		Диалог = Новый ДиалогРасписанияРегламентногоЗадания(РегламентноеЗадание.Расписание);
		
		Если Диалог.ОткрытьМодально() Тогда
			РегламентноеЗадание.Расписание = Диалог.Расписание;
			РегламентноеЗадание.Записать();
			
			Строка.Расписание = РегламентноеЗадание.Расписание;
		КонецЕсли;
		
		БлокироватьОбновление = Ложь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриОткрытии()
	
	Попытка
		ОтборФоновыхЗаданий = ВосстановитьЗначение("ФоновыеЗадания.Отбор");
		ОтборФоновыхЗаданийВключен = ВосстановитьЗначение("ФоновыеЗадания.ОтборВключен");
		ОтборРегламентныхЗаданий = ПреобразоватьОтборПослеВосстановленияЗначений(ВосстановитьЗначение("РегламентныеЗадания.Отбор"));
		ОтборРегламентныхЗаданийВключен = ВосстановитьЗначение("РегламентныеЗадания.ОтборВключен");
		
		ОтборПоТекущемуРегламентномуЗаданию = ВосстановитьЗначение("ФоновыеЗадания.ОтборПоТекущемуРегламентномуЗаданию");
		Кнопка = ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.ОтборПоТекущему;
		Кнопка.Пометка = ОтборПоТекущемуРегламентномуЗаданию;

		АвтообновлениеСпискаРегламентныхЗаданий = ВосстановитьЗначение("РегламентныеЗадания.АвтообновлениеСписка");
		ЭлементыФормы.КоманднаяПанельРегламентныеЗадания.Кнопки.НастройкаОбновления.Пометка = АвтообновлениеСпискаРегламентныхЗаданий;
		ПериодАвтообновленияСпискаРегламентныхЗаданий = ВосстановитьЗначение("РегламентныеЗадания.ПериодАвтообновленияСписка");
		
		АвтообновлениеСпискаФоновыхЗаданий = ВосстановитьЗначение("ФоновыеЗадания.АвтообновлениеСписка");
		ПериодАвтообновленияСпискаФоновыхЗаданий = ВосстановитьЗначение("ФоновыеЗадания.ПериодАвтообновленияСписка");
		ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.НастройкаОбновления.Пометка = АвтообновлениеСпискаФоновыхЗаданий;
		
		ПолучатьСообщенияПользователю = ВосстановитьЗначение("ФоновыеЗадания.ПолучатьСообщенияПользователю");
		ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.ПолучатьСообщенияПользователю.Пометка = ПолучатьСообщенияПользователю;
		Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбновитьСписокРегламентныхЗаданий", ПериодАвтообновленияСпискаРегламентныхЗаданий);
		КонецЕсли;		
		
		Если АвтообновлениеСпискаФоновыхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбновитьСписокФоновыхЗаданий", ПериодАвтообновленияСпискаФоновыхЗаданий);
		КонецЕсли;		
		
		ОбновитьСписокРегламентныхЗаданий();
		ОбновитьСписокФоновыхЗаданий();
	Исключение
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	//ЭлементыФормы.КоманднаяПанельРегламентныеЗадания.Кнопки.ПодменюВыполнить.Кнопки.ВыполнитьРегламентноеЗаданиеНаСервере.Доступность = ирКэш.Получить().ЭтоФайловаяБаза;
	ЭлементыФормы.КоманднаяПанельРегламентныеЗадания.Кнопки.ПодменюВыполнить.Кнопки.ВыполнитьРегламентноеЗаданиеВФоновомЗадании.Доступность = Не ирКэш.Получить().ЭтоФайловаяБаза;
	//ЭлементыФормы.ПанельФоновыеЗадания.Доступность = Не ирКэш.Получить().ЭтоФайловаяБаза;
	ЭлементыФормы.КоманднаяПанельРегламентныеЗадания.Кнопки.РаботатьДиспетчером.Доступность = ирКэш.Получить().ЭтоФайловаяБаза;
	
КонецПроцедуры

Процедура СписокРегламентныхЗаданийПередУдалением(Элемент, Отказ)
	
	Отказ = Истина;
	ВыделенныеСтроки = ЭлементыФормы.СписокРегламентныхЗаданий.ВыделенныеСтроки;
	Ответ = Вопрос("Вы уверены, что хотите удалить " + ВыделенныеСтроки.Количество() + " регламентных заданий?", РежимДиалогаВопрос.ОКОтмена);
	Если Ответ <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	 
	Для Каждого Строка из ВыделенныеСтроки Цикл
		РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(Строка.Идентификатор);
		Если РегламентноеЗадание.Предопределенное Тогда
			Сообщить("Нельзя удалить предопределенное регламентное задание: " + РегламентноеЗадание.Метаданные + "." + РегламентноеЗадание.Наименование,
				СтатусСообщения.Внимание);
		Иначе
			РегламентноеЗадание.Удалить();
		КонецЕсли;
	КонецЦикла;
	
	ОбновитьСписокРегламентныхЗаданий();
	
КонецПроцедуры

Процедура СписокРегламентныхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ = Истина;
	Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогРегламентногоЗадания");
	Если Диалог.ОткрытьМодально() = Истина Тогда
		
		Строка = СписокРегламентныхЗаданий.Добавить();
		РегламентноеЗадание = Диалог.РегламентноеЗадание;
		
		Строка.Метаданные = РегламентноеЗадание.Метаданные.Представление();
		Строка.Предопределенное = РегламентноеЗадание.Предопределенное;
		Строка.Идентификатор = РегламентноеЗадание.УникальныйИдентификатор;
		
		Строка.Наименование = РегламентноеЗадание.Наименование;
		Строка.Ключ = РегламентноеЗадание.Ключ;
		Строка.Расписание = РегламентноеЗадание.Расписание;
		Строка.Пользователь = РегламентноеЗадание.ИмяПользователя;
		Строка.Предопределенное = РегламентноеЗадание.Предопределенное;
		Строка.Использование = РегламентноеЗадание.Использование;
		Строка.Идентификатор = РегламентноеЗадание.УникальныйИдентификатор;
		
		ПоследнееЗадание = ПолучитьПоследнееЗаданиеРегламентногоЗадания(РегламентноеЗадание);
		Если ПоследнееЗадание <> Неопределено Тогда
			Строка.Выполнялось = ПоследнееЗадание.Начало;
			Строка.Состояние = ПоследнееЗадание.Состояние;
		КонецЕсли;
		
		РегламентныеЗаданияСоответствие[Строка(РегламентноеЗадание.УникальныйИдентификатор)] = РегламентноеЗадание;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПоследнееЗаданиеРегламентногоЗадания(РегламентноеЗадание)
	
	Если Не ирКэш.Получить().ЭтоФайловаяБаза Тогда // Антибаг платформы 8.2.15 http://partners.v8.1c.ru/forum/thread.jsp?id=1005239#1005239
		ПоследнееЗадание = РегламентноеЗадание.ПоследнееЗадание;
	КонецЕсли;
	Возврат ПоследнееЗадание;

КонецФункции

Процедура ОбновитьФоновыеЗадания()
	
	Попытка
		ОбновитьСписокФоновыхЗаданий();
	Исключение
		Сообщить("Ошибка обновления списка фоновых заданий: " + ОписаниеОшибки());
	КонецПопытки;

КонецПроцедуры


Процедура ОбновитьФоновыеНажатие(Кнопка)
	
	ОбновитьФоновыеЗадания();
	
КонецПроцедуры

Процедура ОтменитьФоновоеНажатие(Кнопка)
	
	Отказ = Истина;
	Попытка
		ВыделенныеСтроки = ЭлементыФормы.СписокФоновыхЗаданий.ВыделенныеСтроки;
		Для Каждого Строка из ВыделенныеСтроки Цикл
			ФоновоеЗадание = ФоновыеЗаданияСоответствие.Получить(Строка.Идентификатор);
			ФоновоеЗадание.Отменить();
		КонецЦикла;
		
		ОбновитьСписокФоновыхЗаданий();
	Исключение	
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	
КонецПроцедуры

Процедура СписокФоновыхЗаданийПередНачаломДобавления(Элемент, Отказ, Копирование)
	
	Попытка
		ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор());
	Исключение
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
		Возврат;
	КонецПопытки; 
	
	Отказ = Истина;
	БлокироватьОбновление = Истина;
	Попытка
		Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогФоновогоЗадания");
		мРегламентное = "";
		Если Копирование Тогда
			ТекущиеДанные = Элемент.ТекущиеДанные;
			
			Если ТекущиеДанные <> Неопределено Тогда 
				
				Диалог.ИмяМетода    = ТекущиеДанные.Метод;
				Диалог.Ключ         = ТекущиеДанные.Ключ;
				Диалог.Наименование = ТекущиеДанные.Наименование;
				
				ФоновоеЗадание = ФоновыеЗаданияСоответствие.Получить(ТекущиеДанные.Идентификатор);
				
				Если ФоновоеЗадание <> Неопределено Тогда
					
					РегламентноеЗадание = ФоновоеЗадание.РегламентноеЗадание;
					
					Если РегламентноеЗадание <> Неопределено Тогда	
						
						Диалог.мРегламентноеЗадание = РегламентноеЗадание;
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		Если Диалог.ОткрытьМодально() = Истина Тогда
			ОбновитьСписокФоновыхЗаданий();
		КонецЕсли;
	Исключение
		ПоказатьИнформациюОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;	
	БлокироватьОбновление = Ложь;
	
КонецПроцедуры

Процедура СписокФоновыхЗаданийПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура СписокФоновыхЗаданийПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

Процедура ОтключитьОтборФоновыхЗаданий(Кнопка)
	
	ОтборФоновыхЗаданий = Неопределено;
	ФоновыеЗаданияУстановитьОтбор(Ложь);
	
КонецПроцедуры

Процедура ФоновыеЗаданияУстановитьОтбор(пОтборФоновыхЗаданийВключен = Истина) Экспорт
	
	ОтборФоновыхЗаданийВключен = пОтборФоновыхЗаданийВключен;
	СохранитьЗначение("ФоновыеЗадания.Отбор", ОтборФоновыхЗаданий);
	СохранитьЗначение("ФоновыеЗадания.ОтборВключен", ОтборФоновыхЗаданийВключен);
	СохранитьЗначение("ФоновыеЗадания.ОтборПоТекущемуРегламентномуЗаданию", ОтборПоТекущемуРегламентномуЗаданию);
	Если Не ОтборФоновыхЗаданийВключен Тогда
		ОтборПоТекущемуРегламентномуЗаданию = Ложь;
		ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.ОтборПоТекущему.Пометка = ОтборПоТекущемуРегламентномуЗаданию;
	КонецЕсли; 
	ОбновитьСписокФоновыхЗаданий();
	
КонецПроцедуры

Процедура РегламентныеЗаданияУстановитьОтбор(пОтборРегламентныхЗаданийВключен = Истина)
	
	ОтборРегламентныхЗаданийВключен = пОтборРегламентныхЗаданийВключен;
	СохранитьЗначение("РегламентныеЗадания.Отбор", ПреобразоватьОтборДляСохраненияЗначения(ОтборРегламентныхЗаданий));
	СохранитьЗначение("РегламентныеЗадания.ОтборВключен", ОтборРегламентныхЗаданийВключен);
	//Если Не ОтборФоновыхЗаданийВключен Тогда
	//	ОтборПоТекущемуРегламентномуЗаданию = Ложь;
	//	ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.ОтборПоТекущему.Пометка = ОтборПоТекущемуРегламентномуЗаданию;
	//КонецЕсли; 
	ОбновитьСписокРегламентныхЗаданий();
	
КонецПроцедуры

Процедура УстановитьОтборФоновыхЗаданий(Кнопка)
	
	Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогОтбораФоновогоЗадания");
	Диалог.Отбор = ОтборФоновыхЗаданий;
	Если Диалог.ОткрытьМодально() = Истина Тогда
		ОтборФоновыхЗаданий = Диалог.Отбор;
		ФоновыеЗаданияУстановитьОтбор();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОформитьСтрокуЗадания(ОформлениеСтроки, ДанныеСтроки)

	Если ДанныеСтроки.СостояниеЗадания = СостояниеФоновогоЗадания.Активно Тогда
		ОформлениеСтроки.ЦветТекста = Новый Цвет(0, 0, 200);
	ИначеЕсли ДанныеСтроки.СостояниеЗадания = СостояниеФоновогоЗадания.Завершено Тогда
	ИначеЕсли ДанныеСтроки.СостояниеЗадания = СостояниеФоновогоЗадания.ЗавершеноАварийно Тогда	
		ОформлениеСтроки.ЦветТекста = Новый Цвет(128, 0, 0);
	ИначеЕсли ДанныеСтроки.СостояниеЗадания = СостояниеФоновогоЗадания.Отменено Тогда	
		ОформлениеСтроки.ЦветТекста = Новый Цвет(128, 128, 0);
	КонецЕсли;
	
КонецПроцедуры // ОформитьСтрокуЗадания()
 

Процедура СписокФоновыхЗаданийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
	ОформитьСтрокуЗадания(ОформлениеСтроки, ДанныеСтроки);
	Если ДанныеСтроки.Регламентное <> "" Тогда
		ОформлениеСтроки.Ячейки[0].Картинка = БиблиотекаКартинок.РегламентноеЗадание;
		ОформлениеСтроки.Ячейки[0].ОтображатьКартинку = Истина;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьОтборРегламентныхЗаданий(Кнопка)
	
	Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогОтбораРегламентногоЗадания");
	Диалог.Отбор = ОтборРегламентныхЗаданий;
	Если Диалог.ОткрытьМодально() = Истина Тогда
		ОтборРегламентныхЗаданий = Диалог.Отбор;
		РегламентныеЗаданияУстановитьОтбор();
	КонецЕсли;
	
КонецПроцедуры

Процедура ОтключитьОтборРегламентныхЗаданий(Кнопка)
	
	РегламентныеЗаданияУстановитьОтбор(Ложь);
	
КонецПроцедуры

Процедура КоманднаяПанель4Действие3(Кнопка)
	
	Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогНастройкиОбновленияСписка");
	Диалог.Автообновление = АвтообновлениеСпискаРегламентныхЗаданий;
	Диалог.ПериодАвтообновления = ПериодАвтообновленияСпискаРегламентныхЗаданий;
	Если Диалог.ОткрытьМодально() = Истина Тогда	
		АвтообновлениеСпискаРегламентныхЗаданий = Диалог.Автообновление;
		ПериодАвтообновленияСпискаРегламентныхЗаданий = Диалог.ПериодАвтообновления;
		СохранитьЗначение("РегламентныеЗадания.АвтообновлениеСписка", 
			АвтообновлениеСпискаРегламентныхЗаданий);
		Кнопка.Пометка = АвтообновлениеСпискаРегламентныхЗаданий;
		СохранитьЗначение("РегламентныеЗадания.ПериодАвтообновленияСписка", 
			ПериодАвтообновленияСпискаРегламентныхЗаданий);
			
		ОтключитьОбработчикОжидания("ОбновитьСписокРегламентныхЗаданий");
		Если АвтообновлениеСпискаРегламентныхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбновитьСписокРегламентныхЗаданий", ПериодАвтообновленияСпискаРегламентныхЗаданий);
		КонецЕсли;		
	КонецЕсли;
	БлокироватьОбновление = Ложь;
	
КонецПроцедуры

Процедура КоманднаяПанель5Действие3(Кнопка)
	
	Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогНастройкиОбновленияСписка");
	Диалог.Автообновление = АвтообновлениеСпискаФоновыхЗаданий;
	Диалог.ПериодАвтообновления = ПериодАвтообновленияСпискаФоновыхЗаданий;
	Если Диалог.ОткрытьМодально() = Истина Тогда	
		АвтообновлениеСпискаФоновыхЗаданий = Диалог.Автообновление;
		Кнопка.Пометка = АвтообновлениеСпискаФоновыхЗаданий;
		ПериодАвтообновленияСпискаФоновыхЗаданий = Диалог.ПериодАвтообновления;
		СохранитьЗначение("ФоновыеЗадания.АвтообновлениеСписка", 
			АвтообновлениеСпискаФоновыхЗаданий);
		СохранитьЗначение("ФоновыеЗадания.ПериодАвтообновленияСписка", 
			ПериодАвтообновленияСпискаФоновыхЗаданий);
			
		ОтключитьОбработчикОжидания("ОбновитьСписокФоновыхЗаданий");
		Если АвтообновлениеСпискаФоновыхЗаданий = Истина Тогда
			ПодключитьОбработчикОжидания("ОбновитьСписокФоновыхЗаданий", ПериодАвтообновленияСпискаФоновыхЗаданий);	
		КонецЕсли;		
	КонецЕсли;
	БлокироватьОбновление = Ложь;
	
КонецПроцедуры

Процедура КоманднаяПанельФоновыеЗаданияОтборПоТекущему(Кнопка)
	
	ОтборПоТекущемуРегламентномуЗаданию = Не Кнопка.Пометка;
	Кнопка.Пометка = ОтборПоТекущемуРегламентномуЗаданию;
	ОбновитьОтборФоновыхЗаданийПоТекущемуРегламентному();
	
КонецПроцедуры

Процедура ОбновитьОтборФоновыхЗаданийПоТекущемуРегламентному()
	
	Если ОтборФоновыхЗаданий = Неопределено Тогда
		ОтборФоновыхЗаданий = Новый Структура;
	КонецЕсли; 
	Если ОтборПоТекущемуРегламентномуЗаданию Тогда
		УИ = Новый УникальныйИдентификатор(ЭлементыФормы.СписокРегламентныхЗаданий.ТекущаяСтрока.Идентификатор);
		ОтборФоновыхЗаданий.Вставить("РегламентноеЗадание", РегламентныеЗадания.НайтиПоУникальномуИдентификатору(УИ));
		ОтборФоновыхЗаданий.Вставить("Ключ", ЭлементыФормы.СписокРегламентныхЗаданий.ТекущаяСтрока.Ключ);
	Иначе
		Если ОтборФоновыхЗаданий.Свойство("РегламентноеЗадание") Тогда
			ОтборФоновыхЗаданий.Удалить("РегламентноеЗадание");
		КонецЕсли; 
		Если ОтборФоновыхЗаданий.Свойство("Ключ") Тогда
			ОтборФоновыхЗаданий.Удалить("Ключ");
		КонецЕсли; 
	КонецЕсли; 
	ФоновыеЗаданияУстановитьОтбор();

КонецПроцедуры

Процедура СписокРегламентныхЗаданийПриАктивизацииСтроки(Элемент)
	
	Если ОтборПоТекущемуРегламентномуЗаданию Тогда
		ОбновитьОтборФоновыхЗаданийПоТекущемуРегламентному();
	КонецЕсли; 
	
КонецПроцедуры

Процедура ВыполнитьРегламентноеЗаданиеВЭтомСеансе(НаСервере = Ложь)
	
	ТекущиеДанные = ЭлементыФормы.СписокРегламентныхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(ТекущиеДанные.Идентификатор);
	СтрокаПараметров = "";
	Индекс = 0;
	Пока Индекс < РегламентноеЗадание.Параметры.Количество() Цикл
		СтрокаПараметров = СтрокаПараметров + "_АлгоритмОбъект[" + Индекс + "]";
		Если Индекс < (РегламентноеЗадание.Параметры.Количество()-1) Тогда
			СтрокаПараметров = СтрокаПараметров + ",";
		КонецЕсли;
		Индекс = Индекс + 1;
	КонецЦикла;
	ТекстПрограммы = "" + РегламентноеЗадание.Метаданные.ИмяМетода + "(" + СтрокаПараметров + ");";
	Если НаСервере Тогда
		ирСервер.ВыполнитьАлгоритм(ТекстПрограммы, РегламентноеЗадание.Параметры);
	Иначе
		ирНеглобальный.ВыполнитьАлгоритм(ТекстПрограммы, РегламентноеЗадание.Параметры);
	КонецЕсли; 

КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияВыполнитьРегламентноеЗаданиеНаСервере(Кнопка)
	
	ВыполнитьРегламентноеЗаданиеВЭтомСеансе(Истина);
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияВыполнитьРегламентноеЗаданиеНаКлиенте(Кнопка)
	
	ВыполнитьРегламентноеЗаданиеВЭтомСеансе();
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияВыполнитьРегламентноеЗаданиеВФоновомЗадании(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.СписокРегламентныхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(ТекущиеДанные.Идентификатор);
	ИмяМетода    = РегламентноеЗадание.Метаданные.ИмяМетода;
	Параметры    = РегламентноеЗадание.Параметры;
	Ключ         = РегламентноеЗадание.Ключ;
	Наименование = "Ручной запуск пользователем " + ИмяПользователя() + ": " + РегламентноеЗадание.Наименование;
	ФоновоеЗадание = ФоновыеЗадания.Выполнить(ИмяМетода, Параметры, Ключ, Наименование);
	ОбновитьСписокФоновыхЗаданий();
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияРаботатьДиспетчером(Кнопка)
	
	Пока Истина Цикл
		Состояние("Работаю диспетчером заданий... CTRL+Break для прерывания");
		ВыполнитьОбработкуЗаданий();
		ОбработкаПрерыванияПользователя();
	КонецЦикла; 
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияНовоеОкно(Кнопка)
	
	ЛксОткрытьНовоеОкноОбработки(ЭтотОбъект);
	
КонецПроцедуры

Процедура СписокФоновыхЗаданийПриАктивизацииСтроки(Элемент)
	
	#Если _ Тогда
	    Элемент = ЭлементыФормы.СписокФоновыхЗаданий;
	#КонецЕсли
	ЭлементыФормы.КоманднаяПанельФоновыеЗадания.Кнопки.Отменить.Доступность = Истина
		И Элемент.ТекущаяСтрока <> Неопределено
		И Найти(Элемент.ТекущаяСтрока.Состояние, "ыполняется") > 0;
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияВКонсолиКода(Кнопка)
	
	ТекущиеДанные = ЭлементыФормы.СписокРегламентныхЗаданий.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;  
	РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(ТекущиеДанные.Идентификатор);
	СтрокаПараметров = "";
	Индекс = 0;
	СтруктураПараметров = Новый Структура;
	Пока Индекс < РегламентноеЗадание.Параметры.Количество() Цикл
		ИмяПараметра = "П" + (Индекс + 1);
		СтрокаПараметров = СтрокаПараметров + ИмяПараметра;
		Если Индекс < (РегламентноеЗадание.Параметры.Количество()-1) Тогда
			СтрокаПараметров = СтрокаПараметров + ",";
		КонецЕсли;
		СтруктураПараметров.Вставить(ИмяПараметра, РегламентноеЗадание.Параметры[Индекс]);
		Индекс = Индекс + 1;
	КонецЦикла;
	ТекстПрограммы = "" + РегламентноеЗадание.Метаданные.ИмяМетода + "(" + СтрокаПараметров + ");";
	ОперироватьСтруктурой(ТекстПрограммы, ,СтруктураПараметров);
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияМенеджерТабличногоПоля(Кнопка)
	
	 Обработки.ирМенеджерТабличногоПоля.ПолучитьФорму(, ЭтаФорма, ).УстановитьСвязь(ЭлементыФормы.СписокРегламентныхЗаданий);
	
КонецПроцедуры

Процедура КоманднаяПанельФоновыеЗаданияМенеджерТабличногоПоля(Кнопка)
	
	Обработки.ирМенеджерТабличногоПоля.ПолучитьФорму(, ЭтаФорма, ).УстановитьСвязь(ЭлементыФормы.СписокФоновыхЗаданий);

КонецПроцедуры

Процедура СписокРегламентныхЗаданийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	БлокироватьОбновление = Истина;
	Строка = ВыбраннаяСтрока;
	РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(Строка.Идентификатор);
	Диалог = ОбработкаОбъект.ПолучитьФорму("ДиалогРегламентногоЗадания");
	Диалог.РегламентноеЗадание = РегламентноеЗадание;
	Диалог.ОткрытьМодально();
		
	Строка.Наименование = РегламентноеЗадание.Наименование;
	Строка.Ключ = РегламентноеЗадание.Ключ;
	Строка.Расписание = РегламентноеЗадание.Расписание;
	Строка.Пользователь = РегламентноеЗадание.ИмяПользователя;
	Строка.Предопределенное = РегламентноеЗадание.Предопределенное;
	Строка.Использование = РегламентноеЗадание.Использование;
	Строка.Идентификатор = РегламентноеЗадание.УникальныйИдентификатор;
	
	ПоследнееЗадание = ПолучитьПоследнееЗаданиеРегламентногоЗадания(РегламентноеЗадание);
	Если ПоследнееЗадание <> Неопределено Тогда
		Строка.Выполнялось = ПоследнееЗадание.Начало;
		Строка.Состояние = ПоследнееЗадание.Состояние;
	КонецЕсли;
	БлокироватьОбновление = Ложь;
	
КонецПроцедуры

Процедура СписокРегламентныхЗаданийПередНачаломИзменения(Элемент, Отказ)
	
	Отказ = Истина;

КонецПроцедуры

Процедура СписокРегламентныхЗаданийПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	
    ОформитьСтрокуЗадания(ОформлениеСтроки, ДанныеСтроки);
	Если Не ДанныеСтроки.Использование Тогда
		ОформлениеСтроки.ЦветТекста = Новый Цвет(128, 128, 128);
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоманднаяПанельФоновыеЗаданияПоказатьСообщенияПользователю(Кнопка)

	ПолучатьСообщенияПользователю = Не Кнопка.Пометка;
	Кнопка.Пометка = ПолучатьСообщенияПользователю;
	СохранитьЗначение("ФоновыеЗадания.ПолучатьСообщенияПользователю", ПолучатьСообщенияПользователю);
	Если ПолучатьСообщенияПользователю Тогда
		ОбновитьСписокФоновыхЗаданий();
	КонецЕсли; 
	
КонецПроцедуры

Процедура СписокФоновыхЗаданийВыбор(Элемент, ВыбраннаяСтрока, Колонка, СтандартнаяОбработка)
	
	Если Колонка.Имя = Элемент.Колонки.СообщенияПользователю.Имя Тогда
		Идентификатор = ЭлементыФормы.СписокФоновыхЗаданий.ТекущаяСтрока.Идентификатор;
		ФоновоеЗадание = ФоновыеЗадания.НайтиПоУникальномуИдентификатору(Новый УникальныйИдентификатор(Идентификатор));
		СообщенияПользователю = ФоновоеЗадание.ПолучитьСообщенияПользователю();
		// Антибаг платформы 8.2.14
		Если СообщенияПользователю = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		Сообщить("--Сообщения пользователю от фонового задания " + Идентификатор);
		Для Каждого СообщениеПользователю Из СообщенияПользователю Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла; 
	КонецЕсли; 
	
КонецПроцедуры

Процедура КоманднаяПанельРегламентныеЗаданияЖурналРегистрации(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.СписокРегламентныхЗаданий.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	РегламентноеЗадание = РегламентныеЗаданияСоответствие.Получить(ТекущаяСтрока.Идентификатор);
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ИмяПриложения", "BackgroundJob");
	СтруктураОтбора.Вставить("Метаданные", РегламентноеЗадание.Метаданные.ПолноеИмя()); // сомнительно
	СтруктураОтбора.Вставить("Данные", РегламентноеЗадание.Наименование); // сомнительно
	Обработки.ирАнализЖурналаРегистрации.Создать().ОткрытьСОтбором(,, СтруктураОтбора);
	
КонецПроцедуры

Процедура КоманднаяПанельФоновыеЗаданияЖурналРегистрации(Кнопка)
	
	ТекущаяСтрока = ЭлементыФормы.СписокФоновыхЗаданий.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	ФоновоеЗадание = ФоновыеЗаданияСоответствие.Получить(ТекущаяСтрока.Идентификатор);
	СтруктураОтбора = Новый Структура;
	СтруктураОтбора.Вставить("ИмяПриложения", "BackgroundJob");
	РегламентноеЗадание = ФоновоеЗадание.РегламентноеЗадание;
	Если ЗначениеЗаполнено(РегламентноеЗадание) Тогда
		СтруктураОтбора.Вставить("Метаданные", РегламентноеЗадание.Метаданные.ПолноеИмя()); // сомнительно
		СтруктураОтбора.Вставить("Данные", РегламентноеЗадание.Наименование); // сомнительно
	КонецЕсли; 
	Обработки.ирАнализЖурналаРегистрации.Создать().ОткрытьСОтбором(ФоновоеЗадание.Начало, ФоновоеЗадание.Конец, СтруктураОтбора);
	
КонецПроцедуры

Процедура СтруктураКоманднойПанелиНажатие(Кнопка)
	
	ирНеглобальный.ОткрытьСтруктуруКоманднойПанелиЛкс(ЭтаФорма, Кнопка);
	
КонецПроцедуры

ирНеглобальный.ВстроитьКнопкиСтруктурыКоманднойПанелиЛкс(ЭтаФорма);

РегламентныеЗаданияСоответствие = Новый Соответствие;
ФоновыеЗаданияСоответствие = Новый Соответствие;
БлокироватьОбновление = Ложь;
СписокРегламентныхЗаданий.Колонки.Добавить("СостояниеЗадания");
СписокФоновыхЗаданий.Колонки.Добавить("СостояниеЗадания");