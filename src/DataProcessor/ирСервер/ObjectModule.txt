////////////////////////////////////////////////////////////////////////////////
// Подсистема "Инструменты разработчика"
//
// Авторское право (с) 2007, Старых С.А.

// Поместить строку соединения во временное хранилище
Функция ПоместитьСтрокуСоединенияВХранилищеЛкс(Адрес) Экспорт
		
	ПоместитьВоВременноеХранилище(СтрокаСоединенияИнформационнойБазы(), Адрес);
	
КонецФункции

// Получить строку соединения сервера
Функция ПолучитьСтрокуСоединенияСервераЛкс() Экспорт
	
	Если ирКэш.ЭтоФайловаяБазаЛкс() Тогда
		Результат = СтрокаСоединенияИнформационнойБазы();
	Иначе
		Если ирКэш.ЛиНемобильныйРежимЛкс() Тогда
			АдресХранилища = ПоместитьВоВременноеХранилище("");
			Параметры = Новый Массив();
			Параметры.Добавить(АдресХранилища);
			ФоновоеЗадание = ФоновыеЗадания.Выполнить("ирСервер.ПоместитьСтрокуСоединенияВХранилищеЛкс", Параметры);
			ФоновоеЗадание.ОжидатьЗавершения();
			Результат = ПолучитьИзВременногоХранилища(АдресХранилища);
		Иначе
			Результат = СтрокаСоединенияИнформационнойБазы();
		КонецЕсли; 
	КонецЕсли; 
	Возврат Результат;
	
КонецФункции


/////////////////////////////////////////////
// Редиректы

Функция ПолучитьКаталогНастроекПриложения1СЛкс(ИспользоватьОбщийКаталогНастроек = Истина, СоздатьЕслиОтсутствует = Ложь) Экспорт
	
	// + АВВ [04.06.2013] 
	мирФункцияНеПоддерживается("ПолучитьКаталогНастроекПриложения1СЛкс");
	Результат = ирНеглобальный.ПолучитьКаталогНастроекПриложения1СЛкс(ИспользоватьОбщийКаталогНастроек, СоздатьЕслиОтсутствует);
	Возврат Результат;
	
КонецФункции

Функция ПолучитьИмяФайлаАктивнойНастройкиТехноЖурналаЛкс() Экспорт

	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ПолучитьИмяФайлаАктивнойНастройкиТехноЖурналаЛкс");
	Результат = ирНеглобальный.ПолучитьИмяФайлаАктивнойНастройкиТехноЖурналаЛкс();
	Возврат Результат;

КонецФункции

Функция ЛиКаталогТехножурналаСодержитБлокирующиеФайлыЛкс(КаталогЖурнала) Экспорт

	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ЛиКаталогТехножурналаСодержитБлокирующиеФайлыЛкс");
	Результат = ирНеглобальный.ЛиКаталогТехножурналаСодержитБлокирующиеФайлыЛкс(КаталогЖурнала);
	Возврат Результат;

КонецФункции

Функция ЗаписатьТекстВФайлЛкс(ПолноеИмяФайла, Текст, Кодировка = Неопределено) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ЗаписатьТекстВФайлЛкс");
	Результат = ирНеглобальный.ЗаписатьТекстВФайлЛкс(ПолноеИмяФайла, Текст, Кодировка);
	Возврат Результат;
	
КонецФункции

Функция ПрочитатьТекстИзФайлаЛкс(ПолноеИмяФайла, Кодировка = Неопределено) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ПрочитатьТекстИзФайлаЛкс");
	Результат = ирНеглобальный.ПрочитатьТекстИзФайлаЛкс(ПолноеИмяФайла, Кодировка);
	Возврат Результат;
	
КонецФункции

Функция НайтиИменаФайловЛкс(Путь, Маска = Неопределено, ИскатьВПодкаталогах = Истина) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("НайтиИменаФайловЛкс");
	Результат = ирНеглобальный.НайтиИменаФайловЛкс(Путь, Маска, ИскатьВПодкаталогах);
	Возврат Результат;
	
КонецФункции

Функция ВычислитьРазмерКаталогаЛкс(Каталог, ВключаяПодкаталоги = Истина) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ВычислитьРазмерКаталогаЛкс");
	Результат = ирНеглобальный.ВычислитьРазмерКаталогаЛкс(Каталог, ВключаяПодкаталоги);
	Возврат Результат;

КонецФункции

Функция ПолучитьТекущуюДатуЛкс() Экспорт
	
	// -+ ОВК Антонов [10.10.2012] Результат = ирНеглобальный.ПолучитьТекущуюДатуЛкс();
	Результат = ирМобильные.ПолучитьТекущуюДатуСервера();
	Возврат Результат;
	
КонецФункции

Процедура ОчиститьКаталогЖурналаЛкс(КаталогЖурнала, ВыводитьПредупрежденияИСообщения = Истина) Экспорт

	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ОчиститьКаталогЖурналаЛкс");
	ирНеглобальный.ОчиститьКаталогЖурналаЛкс(КаталогЖурнала, , ВыводитьПредупрежденияИСообщения);

КонецПроцедуры // ОчиститьКаталогЖурналаЛкс()


Процедура ВыполнитьЗапросЛкс(ТекстЗапроса) Экспорт 
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ВыполнитьЗапросЛкс");
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ПереместитьФайлЛкс(ИмяИсточника, ИмяПриемника) Экспорт 

	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ПереместитьФайлЛкс");
	ПереместитьФайл(ИмяИсточника, ИмяПриемника);

КонецПроцедуры // ПереместитьФайл()

Функция ЛиФайлСуществуетЛкс(ПолноеИмяФайла, выхДатаИзменения = Неопределено) Экспорт 

	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ЛиФайлСуществуетЛкс");
	Файл1 = Новый Файл(ПолноеИмяФайла);
	ФайлНайден = Файл1.Существует();
	Если ФайлНайден Тогда
		выхДатаИзменения = Файл1.ПолучитьВремяИзменения();
	КонецЕсли; 
	Возврат ФайлНайден;

КонецФункции // ЛиФайлСуществует()
 
// Выполняет текст алгоритма.
//
// Параметры:
//  ТекстДляВыполнения – Строка;
//  _АлгоритмОбъект - СправочникОбъект
//  *СтруктураПараметров - Структура, *Неопределено.
//
Функция ВыполнитьАлгоритм(_ТекстДляВыполнения, _АлгоритмОбъект = Null, _Режим  = Null,
	_П0 = Null, _П1 = Null, _П2 = Null, _П3 = Null, _П4 = Null, _П5 = Null, _П6 = Null, _П7 = Null, _П8 = Null, _П9 = Null) Экспорт 
		
	Перем Результат;
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ВыполнитьАлгоритм");
	Выполнить(_ТекстДляВыполнения);
	Возврат Результат;
	
КонецФункции // ПозиционныйМетод()

Процедура ВыполнитьАлгоритмБезРезультата(_ТекстДляВыполнения) Экспорт 
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ВыполнитьАлгоритмБезРезультата");
	Выполнить(_ТекстДляВыполнения);
	
КонецПроцедуры

Функция ВычислитьВыражение(Выражение) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ВычислитьВыражение");
	Возврат Вычислить(Выражение);
	
КонецФункции

Процедура ЗаписатьОбъектЛкс(ХМЛ, СтруктураДополнительныхСвойств, РежимЗаписи = Неопределено) Экспорт 
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ЗаписатьОбъектЛкс");
	Объект = ирНеглобальный.ВосстановитьОбъектИзСтрокиXMLЛкс(ХМЛ);
	ирНеглобальный.ВосстановитьДополнительныеСвойстваОбъектаЛкс(Объект, СтруктураДополнительныхСвойств);
	//Если РежимЗаписи = Неопределено Тогда
	//	Объект.Записать();
	//Иначе
	//	Объект.Записать(РежимЗаписи);
	//КонецЕсли; 
	ирНеглобальный.ЗаписатьОбъектЛкс(Объект, Ложь, РежимЗаписи);
	
КонецПроцедуры

Процедура УдалитьОбъектЛкс(ХМЛ, СтруктураДополнительныхСвойств) Экспорт 
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("УдалитьОбъектЛкс");
	Объект = ирНеглобальный.ВосстановитьОбъектИзСтрокиXMLЛкс(ХМЛ);
	Объект.Прочитать();
	ирНеглобальный.ВосстановитьДополнительныеСвойстваОбъектаЛкс(Объект, СтруктураДополнительныхСвойств);
	//Объект.Удалить();
	ирНеглобальный.УдалитьОбъектЛкс(Объект, Ложь);
	
КонецПроцедуры

Процедура УстановитьПометкуУдаленияОбъектаЛкс(ХМЛ, СтруктураДополнительныхСвойств, ЗначениеПометки = Истина) Экспорт 
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("УстановитьПометкуУдаленияОбъектаЛкс");
	Объект = ирНеглобальный.ВосстановитьОбъектИзСтрокиXMLЛкс(ХМЛ);
	ирНеглобальный.ВосстановитьДополнительныеСвойстваОбъектаЛкс(Объект, СтруктураДополнительныхСвойств);
	//Если РежимЗаписи = Неопределено Тогда
	//	Объект.УстановитьПометкуУдаления(ЗначениеПометки);
	//Иначе
		Объект.УстановитьПометкуУдаления(ЗначениеПометки);
	//КонецЕсли; 
	
КонецПроцедуры

Функция ПолучитьИмяКомпьютераЛкс() Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ПолучитьИмяКомпьютераЛкс");
	Результат = ИмяКомпьютера();
	Возврат ИмяКомпьютера();
	
КонецФункции

Функция ПолучитьИспользованиеСобытияЖурналаРегистрацииКакСтруктуру(ИмяСобытия) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("ПолучитьИспользованиеСобытияЖурналаРегистрацииКакСтруктуру");
	Результат = Новый Структура("Использование, ОписаниеИспользования");
	
	ИспользованиеСобытия = ПолучитьИспользованиеСобытияЖурналаРегистрации(ИмяСобытия);
	Результат.Использование = ИспользованиеСобытия.Использование;
	
	Если ТипЗнч(ИспользованиеСобытия.ОписаниеИспользования) = Тип("Массив") И ИспользованиеСобытия.ОписаниеИспользования.Количество() > 0  Тогда
		
		ОписаниеИспользования = Новый Массив();
		
		Если ТипЗнч(ИспользованиеСобытия.ОписаниеИспользования[0]) = Тип("ОписаниеИспользованияСобытияДоступЖурналаРегистрации") Тогда
			
			СтрокаКлючей = "Объект, ПоляРегистрации, ПоляДоступа";
			
		ИначеЕсли ТипЗнч(ИспользованиеСобытия.ОписаниеИспользования[0]) = Тип("ОписаниеИспользованияСобытияОтказВДоступеЖурналаРегистрации") Тогда
			
			СтрокаКлючей = "Объект, ПоляРегистрации";
			
		Иначе
			
			//ВызватьИсключение "Неизвестный тип " + ТипЗнч(ИспользованиеСобытия.ОписаниеИспользования[0]);
			
		КонецЕсли;
		
		Для Каждого ЭлементОписания Из ИспользованиеСобытия.ОписаниеИспользования Цикл
		
			ЭлементМассива = Новый Структура(СтрокаКлючей);		
			ЗаполнитьЗначенияСвойств(ЭлементМассива, ЭлементОписания); 
			ОписаниеИспользования.Добавить(ЭлементМассива);
			
		КонецЦикла;
		
		Результат.ОписаниеИспользования = ОписаниеИспользования;
		
	Иначе
		
		Результат.ОписаниеИспользования = Неопределено;
		
	КонецЕсли; 	
		
	Возврат Результат;
	
КонецФункции

Процедура УстановитьИспользованиеСобытияЖурналаРегистрацииПоСтруктуре(ИмяСобытия, пИспользованиеСобытия) Экспорт
	
	// + АВВ [04.06.2013]
	мирФункцияНеПоддерживается("УстановитьИспользованиеСобытияЖурналаРегистрацииПоСтруктуре");
	ИспользованиеСобытия = Новый ИспользованиеСобытияЖурналаРегистрации;
	ИспользованиеСобытия.Использование = пИспользованиеСобытия.Использование;
	
	пОписаниеИспользования = Неопределено;
	пИспользованиеСобытия.Свойство("ОписаниеИспользования", пОписаниеИспользования);
	Если Истина
		 И ТипЗнч(пОписаниеИспользования) = Тип("Массив") 
		 И пОписаниеИспользования.Количество() > 0
		 И (Ложь
		 	Или ИмяСобытия = "_$Access$_.Access"
			Или ИмяСобытия = "_$Access$_.AccessDenied") Тогда
		
		ТипОписанияСтрокой = ?(ИмяСобытия = "_$Access$_.Access", "ОписаниеИспользованияСобытияДоступЖурналаРегистрации","ОписаниеИспользованияСобытияОтказВДоступеЖурналаРегистрации");			
		ОписаниеИспользования = Новый Массив();
		Для Каждого пЭлементОписания Из пОписаниеИспользования Цикл
			
			ЭлементОписания = Новый(ТипОписанияСтрокой);
			ЗаполнитьЗначенияСвойств(ЭлементОписания, пЭлементОписания); 
			ОписаниеИспользования.Добавить(ЭлементОписания);
			
		КонецЦикла; 			
		
		ИспользованиеСобытия.ОписаниеИспользования = ОписаниеИспользования;
				
	КонецЕсли; 
	
	УстановитьИспользованиеСобытияЖурналаРегистрации(ИмяСобытия, ИспользованиеСобытия)
	
КонецПроцедуры

// + АВВ [04.06.2013] 
Процедура мирФункцияНеПоддерживается(ИмяФункции)
	// АВВ [13.06.2013] Пока не работает как надо, убираю
   //#Если Клиент И Не Сервер Тогда
   //ВызватьИсключение "В мобильном варианте серверная функция """ + ИмяФункции +
   //						""" не поддерживается. Для ее использования встраивайте подсистему.";
   //#КонецЕсли
   Возврат;
КонецПроцедуры

// + АВВ [23.03.2013] 
Процедура мирИнициализировать() Экспорт
	
	Если мирИнициализирована Тогда		
		Возврат;		
	КонецЕсли; 
	
	мирИнициализирована = Истина;
	
КонецПроцедуры